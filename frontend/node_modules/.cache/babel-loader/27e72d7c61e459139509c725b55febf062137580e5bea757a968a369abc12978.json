{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\TopicPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TopicPage() {\n  _s();\n  const [windows, setWindows] = useState([]);\n  const [selectedWindow, setSelectedWindow] = useState(null);\n  const [globalStats, setGlobalStats] = useState({}); // { keyword -> { freq, windows: Set } }\n\n  useEffect(() => {\n    fetch('analysis_data_final.json').then(res => res.json()).then(data => {\n      const filtered = data.filter(w => w.topics && w.topics.length > 0);\n      setWindows(filtered);\n\n      // Build global keyword stats\n      const stats = {};\n      filtered.forEach((w, wi) => {\n        const seenInWindow = new Set();\n        w.topics.forEach(topic => {\n          topic.keywords.forEach(kw => {\n            const key = kw.toLowerCase();\n            if (!stats[key]) stats[key] = {\n              freq: 0,\n              windows: new Set()\n            };\n            stats[key].freq += 1;\n            stats[key].windows.add(wi);\n          });\n        });\n      });\n      setGlobalStats(stats);\n    }).catch(err => console.error('Failed to load analysis data:', err));\n  }, []);\n  const width = 900;\n  const height = 120;\n  const stopwords = new Set(['model', 'language', 'data', 'system', 'task', 'approach', 'method', 'performance', 'based', 'learning', 'use', 'using', 'information', 'research', 'result', 'results', 'different', 'used', 'set']);\n  const isValidKeyword = w => {\n    if (stopwords.has(w)) return false;\n    if (!isNaN(w) && /^[0-9]+$/.test(w)) return false; // 숫자만 있는 키워드 제거\n    return true;\n  };\n  const getTopKeywords = window => {\n    const freq = {};\n    const clusterCount = {};\n    window.topics.forEach(topic => {\n      const seen = new Set();\n      topic.keywords.forEach(word => {\n        const w = word.toLowerCase();\n        if (!isValidKeyword(w)) return;\n        freq[w] = (freq[w] || 0) + 1;\n        if (!seen.has(w)) {\n          clusterCount[w] = (clusterCount[w] || 0) + 1;\n          seen.add(w);\n        }\n      });\n    });\n    const totalWindows = windows.length;\n    const scored = Object.entries(freq).map(([word, count]) => {\n      var _globalStats$word, _globalStats$word$win;\n      const windowAppearances = ((_globalStats$word = globalStats[word]) === null || _globalStats$word === void 0 ? void 0 : (_globalStats$word$win = _globalStats$word.windows) === null || _globalStats$word$win === void 0 ? void 0 : _globalStats$word$win.size) || 1;\n      const idf = Math.log(totalWindows / windowAppearances);\n      return {\n        word,\n        score: count * idf\n      };\n    });\n    return scored.sort((a, b) => b.score - a.score).slice(0, 10).map(k => k.word);\n  };\n  const getEmergingKeywords = currentIndex => {\n    if (currentIndex <= 0) return [];\n    const prevKeywords = new Set();\n    windows[currentIndex - 1].topics.forEach(topic => {\n      topic.keywords.forEach(kw => {\n        const w = kw.toLowerCase();\n        if (isValidKeyword(w)) prevKeywords.add(w);\n      });\n    });\n    const currentKeywords = {};\n    windows[currentIndex].topics.forEach(topic => {\n      topic.keywords.forEach(kw => {\n        const w = kw.toLowerCase();\n        if (isValidKeyword(w) && !prevKeywords.has(w)) {\n          currentKeywords[w] = (currentKeywords[w] || 0) + 1;\n        }\n      });\n    });\n    const totalWindows = windows.length;\n    const scored = Object.entries(currentKeywords).map(([word, count]) => {\n      var _globalStats$word2, _globalStats$word2$wi;\n      const windowAppearances = ((_globalStats$word2 = globalStats[word]) === null || _globalStats$word2 === void 0 ? void 0 : (_globalStats$word2$wi = _globalStats$word2.windows) === null || _globalStats$word2$wi === void 0 ? void 0 : _globalStats$word2$wi.size) || 1;\n      const idf = Math.log(totalWindows / windowAppearances);\n      return {\n        word,\n        score: count * idf\n      };\n    });\n    return scored.sort((a, b) => b.score - a.score).slice(0, 10).map(k => k.word);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '30px',\n      maxWidth: '1000px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCC8 Topics Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      style: {\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"line\", {\n        x1: 50,\n        y1: height / 2,\n        x2: width - 50,\n        y2: height / 2,\n        stroke: \"#ccc\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), windows.map((win, i) => {\n        const x = d3.scaleLinear().domain([windows[0].window_start, windows[windows.length - 1].window_start]).range([60, width - 60])(win.window_start);\n        return /*#__PURE__*/_jsxDEV(\"g\", {\n          transform: `translate(${x}, ${height / 2})`,\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            r: selectedWindow === win ? 8 : 6,\n            fill: selectedWindow === win ? '#007bff' : '#555',\n            onClick: () => setSelectedWindow(win),\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            y: 20,\n            textAnchor: \"middle\",\n            style: {\n              fontSize: '12px',\n              fill: '#333'\n            },\n            children: [win.window_start, \"-\", win.window_end]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), selectedWindow && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedWindow.window_start, \" - \", selectedWindow.window_end]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDD25 Top Keywords in This Window\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '10px',\n          marginBottom: '15px'\n        },\n        children: getTopKeywords(selectedWindow).map((kw, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: '#ffe0b2',\n            padding: '6px 10px',\n            borderRadius: '6px',\n            fontSize: '13px'\n          },\n          children: kw\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83E\\uDDE0 Topics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedWindow.topics.map((topic, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '12px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Cluster \", topic.cluster_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), \" (size: \", topic.size, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 81\n          }, this), \"Confidence:\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold',\n              color: topic.confidence > 0.7 ? 'green' : topic.confidence > 0.4 ? 'orange' : 'red'\n            },\n            children: topic.confidence.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '14px',\n              color: '#555'\n            },\n            children: topic.keywords.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: \"\\uD83C\\uDF31 Emerging Keywords\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '10px'\n        },\n        children: getEmergingKeywords(windows.indexOf(selectedWindow)).map((kw, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: '#e0f7fa',\n            padding: '6px 10px',\n            borderRadius: '6px',\n            fontSize: '13px'\n          },\n          children: kw\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), selectedWindow.top_papers && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: '25px'\n          },\n          children: \"\\uD83D\\uDCC4 Representative Papers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedWindow.top_papers.slice(0, 5).map((paper, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: paper.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: '#eee',\n                height: '6px',\n                borderRadius: '3px',\n                overflow: 'hidden',\n                marginTop: '4px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: `${paper.score * 10000}%`,\n                  background: '#007bff',\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"score: \", paper.score.toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(TopicPage, \"X8XneHYnXX7hBjq/0ELHBTP46Yw=\");\n_c = TopicPage;\nexport default TopicPage;\nvar _c;\n$RefreshReg$(_c, \"TopicPage\");","map":{"version":3,"names":["React","useEffect","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","TopicPage","_s","windows","setWindows","selectedWindow","setSelectedWindow","globalStats","setGlobalStats","fetch","then","res","json","data","filtered","filter","w","topics","length","stats","forEach","wi","seenInWindow","Set","topic","keywords","kw","key","toLowerCase","freq","add","catch","err","console","error","width","height","stopwords","isValidKeyword","has","isNaN","test","getTopKeywords","window","clusterCount","seen","word","totalWindows","scored","Object","entries","map","count","_globalStats$word","_globalStats$word$win","windowAppearances","size","idf","Math","log","score","sort","a","b","slice","k","getEmergingKeywords","currentIndex","prevKeywords","currentKeywords","_globalStats$word2","_globalStats$word2$wi","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","x1","y1","x2","y2","stroke","strokeWidth","win","i","x","scaleLinear","domain","window_start","range","transform","r","fill","onClick","cursor","y","textAnchor","fontSize","window_end","background","borderRadius","boxShadow","display","flexWrap","gap","cluster_id","fontWeight","color","confidence","toFixed","join","marginTop","indexOf","top_papers","paper","title","overflow","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/TopicPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction TopicPage() {\r\n  const [windows, setWindows] = useState([]);\r\n  const [selectedWindow, setSelectedWindow] = useState(null);\r\n  const [globalStats, setGlobalStats] = useState({}); // { keyword -> { freq, windows: Set } }\r\n\r\n  useEffect(() => {\r\n    fetch('analysis_data_final.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const filtered = data.filter(w => w.topics && w.topics.length > 0);\r\n        setWindows(filtered);\r\n\r\n        // Build global keyword stats\r\n        const stats = {};\r\n        filtered.forEach((w, wi) => {\r\n          const seenInWindow = new Set();\r\n          w.topics.forEach(topic => {\r\n            topic.keywords.forEach(kw => {\r\n              const key = kw.toLowerCase();\r\n              if (!stats[key]) stats[key] = { freq: 0, windows: new Set() };\r\n              stats[key].freq += 1;\r\n              stats[key].windows.add(wi);\r\n            });\r\n          });\r\n        });\r\n\r\n        setGlobalStats(stats);\r\n      })\r\n      .catch(err => console.error('Failed to load analysis data:', err));\r\n  }, []);\r\n\r\n  const width = 900;\r\n  const height = 120;\r\n\r\n  const stopwords = new Set([\r\n    'model', 'language', 'data', 'system', 'task', 'approach', 'method',\r\n    'performance', 'based', 'learning', 'use', 'using', 'information',\r\n    'research', 'result', 'results', 'different', 'used', 'set'\r\n  ]);\r\n\r\n  const isValidKeyword = (w) => {\r\n    if (stopwords.has(w)) return false;\r\n    if (!isNaN(w) && /^[0-9]+$/.test(w)) return false; // 숫자만 있는 키워드 제거\r\n    return true;\r\n  };\r\n\r\n  const getTopKeywords = (window) => {\r\n    const freq = {};\r\n    const clusterCount = {};\r\n\r\n    window.topics.forEach(topic => {\r\n      const seen = new Set();\r\n      topic.keywords.forEach(word => {\r\n        const w = word.toLowerCase();\r\n        if (!isValidKeyword(w)) return;\r\n\r\n        freq[w] = (freq[w] || 0) + 1;\r\n        if (!seen.has(w)) {\r\n          clusterCount[w] = (clusterCount[w] || 0) + 1;\r\n          seen.add(w);\r\n        }\r\n      });\r\n    });\r\n\r\n    const totalWindows = windows.length;\r\n    const scored = Object.entries(freq).map(([word, count]) => {\r\n      const windowAppearances = globalStats[word]?.windows?.size || 1;\r\n      const idf = Math.log(totalWindows / windowAppearances);\r\n      return { word, score: count * idf };\r\n    });\r\n\r\n    return scored\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, 10)\r\n      .map(k => k.word);\r\n  };\r\n\r\n  const getEmergingKeywords = (currentIndex) => {\r\n    if (currentIndex <= 0) return [];\r\n\r\n    const prevKeywords = new Set();\r\n    windows[currentIndex - 1].topics.forEach(topic => {\r\n      topic.keywords.forEach(kw => {\r\n        const w = kw.toLowerCase();\r\n        if (isValidKeyword(w)) prevKeywords.add(w);\r\n      });\r\n    });\r\n\r\n    const currentKeywords = {};\r\n    windows[currentIndex].topics.forEach(topic => {\r\n      topic.keywords.forEach(kw => {\r\n        const w = kw.toLowerCase();\r\n        if (isValidKeyword(w) && !prevKeywords.has(w)) {\r\n          currentKeywords[w] = (currentKeywords[w] || 0) + 1;\r\n        }\r\n      });\r\n    });\r\n\r\n    const totalWindows = windows.length;\r\n    const scored = Object.entries(currentKeywords).map(([word, count]) => {\r\n      const windowAppearances = globalStats[word]?.windows?.size || 1;\r\n      const idf = Math.log(totalWindows / windowAppearances);\r\n      return { word, score: count * idf };\r\n    });\r\n\r\n    return scored\r\n      .sort((a, b) => b.score - a.score)\r\n      .slice(0, 10)\r\n      .map(k => k.word);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '30px', maxWidth: '1000px', margin: '0 auto' }}>\r\n      <h2>📈 Topics Timeline</h2>\r\n\r\n      {/* Timeline Chart */}\r\n      <svg width={width} height={height} style={{ marginBottom: '30px' }}>\r\n        <line x1={50} y1={height / 2} x2={width - 50} y2={height / 2} stroke=\"#ccc\" strokeWidth={2} />\r\n        {windows.map((win, i) => {\r\n          const x = d3.scaleLinear()\r\n            .domain([windows[0].window_start, windows[windows.length - 1].window_start])\r\n            .range([60, width - 60])(win.window_start);\r\n          return (\r\n            <g key={i} transform={`translate(${x}, ${height / 2})`}>\r\n              <circle\r\n                r={selectedWindow === win ? 8 : 6}\r\n                fill={selectedWindow === win ? '#007bff' : '#555'}\r\n                onClick={() => setSelectedWindow(win)}\r\n                style={{ cursor: 'pointer' }}\r\n              />\r\n              <text\r\n                y={20}\r\n                textAnchor=\"middle\"\r\n                style={{ fontSize: '12px', fill: '#333' }}\r\n              >\r\n                {win.window_start}-{win.window_end}\r\n              </text>\r\n            </g>\r\n          );\r\n        })}\r\n      </svg>\r\n\r\n      {/* Detail View */}\r\n      {selectedWindow && (\r\n        <div style={{ background: '#fff', padding: '20px', borderRadius: '10px', boxShadow: '0 2px 8px rgba(0,0,0,0.1)' }}>\r\n          <h3>{selectedWindow.window_start} - {selectedWindow.window_end}</h3>\r\n\r\n          <h4>🔥 Top Keywords in This Window</h4>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px', marginBottom: '15px' }}>\r\n            {getTopKeywords(selectedWindow).map((kw, i) => (\r\n              <span key={i} style={{ background: '#ffe0b2', padding: '6px 10px', borderRadius: '6px', fontSize: '13px' }}>{kw}</span>\r\n            ))}\r\n          </div>\r\n\r\n          <h4>🧠 Topics</h4>\r\n          <ul>\r\n            {selectedWindow.topics.map((topic, i) => (\r\n              <li key={i} style={{ marginBottom: '12px' }}>\r\n                <strong>Cluster {topic.cluster_id}</strong> (size: {topic.size})<br />\r\n                Confidence:{' '}\r\n                <span style={{\r\n                  fontWeight: 'bold',\r\n                  color: topic.confidence > 0.7 ? 'green' : topic.confidence > 0.4 ? 'orange' : 'red'\r\n                }}>\r\n                  {topic.confidence.toFixed(2)}\r\n                </span><br />\r\n                <span style={{ fontSize: '14px', color: '#555' }}>{topic.keywords.join(', ')}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n\r\n          <h4 style={{ marginTop: '20px' }}>🌱 Emerging Keywords</h4>\r\n          <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n            {getEmergingKeywords(windows.indexOf(selectedWindow)).map((kw, i) => (\r\n              <span key={i} style={{ background: '#e0f7fa', padding: '6px 10px', borderRadius: '6px', fontSize: '13px' }}>{kw}</span>\r\n            ))}\r\n          </div>\r\n\r\n          {selectedWindow.top_papers && (\r\n            <>\r\n              <h4 style={{ marginTop: '25px' }}>📄 Representative Papers</h4>\r\n              <ul>\r\n                {selectedWindow.top_papers.slice(0, 5).map((paper, i) => (\r\n                  <li key={i} style={{ marginBottom: '10px' }}>\r\n                    <strong>{paper.title}</strong><br />\r\n                    <div style={{ background: '#eee', height: '6px', borderRadius: '3px', overflow: 'hidden', marginTop: '4px' }}>\r\n                      <div style={{\r\n                        width: `${paper.score * 10000}%`,\r\n                        background: '#007bff',\r\n                        height: '100%'\r\n                      }}></div>\r\n                    </div>\r\n                    <small>score: {paper.score.toFixed(6)}</small>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopicPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}