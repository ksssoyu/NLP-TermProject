{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\CitationYearPage.jsx\",\n  _s = $RefreshSig$();\n// CitationYearPage with PageRank-based top 10 highlighting\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitationYearPage() {\n  _s();\n  const svgRef = useRef();\n  const [yearlyEmergingKeywords, setYearlyEmergingKeywords] = useState({});\n  const [allYearData, setAllYearData] = useState({});\n  const [selectedYear, setSelectedYear] = useState('2015-2017');\n  const [currentData, setCurrentData] = useState(null);\n  const [selectedCluster, setSelectedCluster] = useState(null);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [citationLookup, setCitationLookup] = useState({});\n  const [pagerankLookup, setPagerankLookup] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n  const simulationRef = useRef(null);\n  const availableYears = [{\n    label: '2015-2017',\n    file: 'cluster_2015_2017.json'\n  }, {\n    label: '2016-2018',\n    file: 'cluster_2016_2018.json'\n  }, {\n    label: '2017-2019',\n    file: 'cluster_2017_2019.json'\n  }, {\n    label: '2018-2020',\n    file: 'cluster_2018_2020.json'\n  }, {\n    label: '2019-2021',\n    file: 'cluster_2019_2021.json'\n  }, {\n    label: '2020-2022',\n    file: 'cluster_2020_2022.json'\n  }, {\n    label: '2021-2023',\n    file: 'cluster_2021_2023.json'\n  }, {\n    label: '2022-2024',\n    file: 'cluster_2022_2024.json'\n  }];\n  useEffect(() => {\n    fetch('/citation_graph_with_cluster_v3.json').then(res => res.json()).then(json => {\n      const map = {};\n      json.nodes.forEach(n => {\n        var _n$citationCount;\n        let authors = [];\n        if (Array.isArray(n.authors)) authors = n.authors;else if (typeof n.authors === 'string') {\n          try {\n            authors = JSON.parse(n.authors);\n          } catch {\n            authors = n.authors.split(/,\\s*/);\n          }\n        }\n        map[n.id] = {\n          authors,\n          year: n.year,\n          citationCount: (_n$citationCount = n.citationCount) !== null && _n$citationCount !== void 0 ? _n$citationCount : 0\n        };\n      });\n      setCitationLookup(map);\n    });\n    fetch('/papers_by_pagerank.json').then(res => res.json()).then(data => {\n      const lookup = {};\n      data.forEach(p => lookup[p.id] = p.pagerank);\n      setPagerankLookup(lookup);\n    });\n    Promise.all(availableYears.map(year => fetch(`/cluster_with_keywords_by_year/${year.file}`).then(res => res.json()))).then(dataArray => {\n      const yearDataMap = {};\n      availableYears.forEach((year, idx) => {\n        yearDataMap[year.label] = dataArray[idx];\n      });\n      setAllYearData(yearDataMap);\n      setSelectedYear(availableYears[0].label);\n      setCurrentData(yearDataMap[availableYears[0].label]);\n    });\n  }, []);\n  useEffect(() => {\n    if (!currentData || !pagerankLookup) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 1000,\n      height = 700;\n    svg.attr('viewBox', [0, 0, width, height]);\n    const svgGroup = svg.append('g');\n    const nodes = [],\n      links = [];\n    const topPapersByCluster = {};\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\n      const sorted = [...papers].map(p => ({\n        ...p,\n        pagerank: pagerankLookup[p.id] || 0\n      })).sort((a, b) => b.pagerank - a.pagerank);\n      topPapersByCluster[clusterId] = sorted.slice(0, 10).map(p => p.id);\n      nodes.push({\n        id: `cluster_${clusterId}`,\n        name: `Cluster ${clusterId}`,\n        type: 'cluster',\n        clusterId\n      });\n      sorted.forEach(p => {\n        nodes.push({\n          id: p.id,\n          name: p.title,\n          type: 'paper',\n          clusterId,\n          pagerank: p.pagerank || 0\n        });\n        links.push({\n          source: `cluster_${clusterId}`,\n          target: p.id\n        });\n      });\n    });\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(80)).force('charge', d3.forceManyBody().strength(-120)).force('center', d3.forceCenter(width / 2, height / 2)).force('collision', d3.forceCollide().radius(20));\n    const link = svgGroup.append('g').attr('stroke', '#aaa').selectAll('line').data(links).join('line').attr('stroke-width', 1);\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const node = svgGroup.append('g').selectAll('circle').data(nodes).join('circle').attr('r', d => {\n      var _topPapersByCluster$d;\n      return d.type === 'cluster' ? 20 : (_topPapersByCluster$d = topPapersByCluster[d.clusterId]) !== null && _topPapersByCluster$d !== void 0 && _topPapersByCluster$d.includes(d.id) ? 12 : 6;\n    }).attr('fill', d => d.type === 'cluster' ? '#444' : color(d.clusterId)).attr('stroke', d => {\n      var _topPapersByCluster$d2;\n      return (_topPapersByCluster$d2 = topPapersByCluster[d.clusterId]) !== null && _topPapersByCluster$d2 !== void 0 && _topPapersByCluster$d2.includes(d.id) ? 'gold' : '#fff';\n    }).attr('stroke-width', d => {\n      var _topPapersByCluster$d3;\n      return (_topPapersByCluster$d3 = topPapersByCluster[d.clusterId]) !== null && _topPapersByCluster$d3 !== void 0 && _topPapersByCluster$d3.includes(d.id) ? 2 : 1.2;\n    }).call(drag(simulation));\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n    });\n    function drag(simulation) {\n      return d3.drag().on('start', (event, d) => {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }).on('drag', (event, d) => {\n        d.fx = event.x;\n        d.fy = event.y;\n      }).on('end', (event, d) => {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      });\n    }\n  }, [currentData, pagerankLookup]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        margin: '10px'\n      },\n      children: \"\\uD83D\\uDCC8 Citation Graph by Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedYear,\n      onChange: e => {\n        setSelectedYear(e.target.value);\n        setCurrentData(allYearData[e.target.value]);\n      },\n      children: availableYears.map(y => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: y.label\n      }, y.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 1000,\n      height: 700\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(CitationYearPage, \"eoEBQa9XVcaW7gxU6ayZ5Oge1kE=\");\n_c = CitationYearPage;\nexport default CitationYearPage;\nvar _c;\n$RefreshReg$(_c, \"CitationYearPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","CitationYearPage","_s","svgRef","yearlyEmergingKeywords","setYearlyEmergingKeywords","allYearData","setAllYearData","selectedYear","setSelectedYear","currentData","setCurrentData","selectedCluster","setSelectedCluster","selectedPaper","setSelectedPaper","searchKeyword","setSearchKeyword","suggestions","setSuggestions","citationLookup","setCitationLookup","pagerankLookup","setPagerankLookup","errorMessage","setErrorMessage","simulationRef","availableYears","label","file","fetch","then","res","json","map","nodes","forEach","n","_n$citationCount","authors","Array","isArray","JSON","parse","split","id","year","citationCount","data","lookup","p","pagerank","Promise","all","dataArray","yearDataMap","idx","svg","select","current","selectAll","remove","width","height","attr","svgGroup","append","links","topPapersByCluster","Object","entries","cluster_details","clusterId","papers","sorted","sort","a","b","slice","push","name","type","title","source","target","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","link","join","color","scaleOrdinal","schemeCategory10","node","_topPapersByCluster$d","includes","_topPapersByCluster$d2","_topPapersByCluster$d3","call","drag","on","x","y","event","active","alphaTarget","restart","fx","fy","style","display","flexDirection","children","margin","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","ref","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/CitationYearPage.jsx"],"sourcesContent":["// CitationYearPage with PageRank-based top 10 highlighting\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction CitationYearPage() {\r\n  const svgRef = useRef();\r\n  const [yearlyEmergingKeywords, setYearlyEmergingKeywords] = useState({});\r\n  const [allYearData, setAllYearData] = useState({});\r\n  const [selectedYear, setSelectedYear] = useState('2015-2017');\r\n  const [currentData, setCurrentData] = useState(null);\r\n  const [selectedCluster, setSelectedCluster] = useState(null);\r\n  const [selectedPaper, setSelectedPaper] = useState(null);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [citationLookup, setCitationLookup] = useState({});\r\n  const [pagerankLookup, setPagerankLookup] = useState({});\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const simulationRef = useRef(null);\r\n\r\n  const availableYears = [\r\n    { label: '2015-2017', file: 'cluster_2015_2017.json' },\r\n    { label: '2016-2018', file: 'cluster_2016_2018.json' },\r\n    { label: '2017-2019', file: 'cluster_2017_2019.json' },\r\n    { label: '2018-2020', file: 'cluster_2018_2020.json' },\r\n    { label: '2019-2021', file: 'cluster_2019_2021.json' },\r\n    { label: '2020-2022', file: 'cluster_2020_2022.json' },\r\n    { label: '2021-2023', file: 'cluster_2021_2023.json' },\r\n    { label: '2022-2024', file: 'cluster_2022_2024.json' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetch('/citation_graph_with_cluster_v3.json')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        const map = {};\r\n        json.nodes.forEach(n => {\r\n          let authors = [];\r\n          if (Array.isArray(n.authors)) authors = n.authors;\r\n          else if (typeof n.authors === 'string') {\r\n            try { authors = JSON.parse(n.authors); }\r\n            catch { authors = n.authors.split(/,\\s*/); }\r\n          }\r\n          map[n.id] = {\r\n            authors,\r\n            year: n.year,\r\n            citationCount: n.citationCount ?? 0\r\n          };\r\n        });\r\n        setCitationLookup(map);\r\n      });\r\n\r\n    fetch('/papers_by_pagerank.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const lookup = {};\r\n        data.forEach(p => lookup[p.id] = p.pagerank);\r\n        setPagerankLookup(lookup);\r\n      });\r\n\r\n    Promise.all(availableYears.map(year => \r\n      fetch(`/cluster_with_keywords_by_year/${year.file}`).then(res => res.json())\r\n    ))\r\n    .then(dataArray => {\r\n      const yearDataMap = {};\r\n      availableYears.forEach((year, idx) => {\r\n        yearDataMap[year.label] = dataArray[idx];\r\n      });\r\n      setAllYearData(yearDataMap);\r\n      setSelectedYear(availableYears[0].label);\r\n      setCurrentData(yearDataMap[availableYears[0].label]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!currentData || !pagerankLookup) return;\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n    const width = 1000, height = 700;\r\n    svg.attr('viewBox', [0, 0, width, height]);\r\n    const svgGroup = svg.append('g');\r\n\r\n    const nodes = [], links = [];\r\n    const topPapersByCluster = {};\r\n\r\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\r\n      const sorted = [...papers]\r\n        .map(p => ({ ...p, pagerank: pagerankLookup[p.id] || 0 }))\r\n        .sort((a, b) => b.pagerank - a.pagerank);\r\n      topPapersByCluster[clusterId] = sorted.slice(0, 10).map(p => p.id);\r\n\r\n      nodes.push({\r\n        id: `cluster_${clusterId}`,\r\n        name: `Cluster ${clusterId}`,\r\n        type: 'cluster',\r\n        clusterId,\r\n      });\r\n\r\n      sorted.forEach(p => {\r\n        nodes.push({\r\n          id: p.id,\r\n          name: p.title,\r\n          type: 'paper',\r\n          clusterId,\r\n          pagerank: p.pagerank || 0\r\n        });\r\n        links.push({ source: `cluster_${clusterId}`, target: p.id });\r\n      });\r\n    });\r\n\r\n    const simulation = d3.forceSimulation(nodes)\r\n      .force('link', d3.forceLink(links).id(d => d.id).distance(80))\r\n      .force('charge', d3.forceManyBody().strength(-120))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('collision', d3.forceCollide().radius(20));\r\n\r\n    const link = svgGroup.append('g')\r\n      .attr('stroke', '#aaa')\r\n      .selectAll('line')\r\n      .data(links)\r\n      .join('line')\r\n      .attr('stroke-width', 1);\r\n\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    const node = svgGroup.append('g')\r\n      .selectAll('circle')\r\n      .data(nodes)\r\n      .join('circle')\r\n      .attr('r', d => d.type === 'cluster' ? 20 : (topPapersByCluster[d.clusterId]?.includes(d.id) ? 12 : 6))\r\n      .attr('fill', d => d.type === 'cluster' ? '#444' : color(d.clusterId))\r\n      .attr('stroke', d => topPapersByCluster[d.clusterId]?.includes(d.id) ? 'gold' : '#fff')\r\n      .attr('stroke-width', d => topPapersByCluster[d.clusterId]?.includes(d.id) ? 2 : 1.2)\r\n      .call(drag(simulation));\r\n\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n      node\r\n        .attr('cx', d => d.x)\r\n        .attr('cy', d => d.y);\r\n    });\r\n\r\n    function drag(simulation) {\r\n      return d3.drag()\r\n        .on('start', (event, d) => {\r\n          if (!event.active) simulation.alphaTarget(0.3).restart();\r\n          d.fx = d.x; d.fy = d.y;\r\n        })\r\n        .on('drag', (event, d) => {\r\n          d.fx = event.x; d.fy = event.y;\r\n        })\r\n        .on('end', (event, d) => {\r\n          if (!event.active) simulation.alphaTarget(0);\r\n          d.fx = null; d.fy = null;\r\n        });\r\n    }\r\n  }, [currentData, pagerankLookup]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n      <h2 style={{ margin: '10px' }}>📈 Citation Graph by Year</h2>\r\n      <select value={selectedYear} onChange={(e) => {\r\n        setSelectedYear(e.target.value);\r\n        setCurrentData(allYearData[e.target.value]);\r\n      }}>\r\n        {availableYears.map(y => <option key={y.label}>{y.label}</option>)}\r\n      </select>\r\n      <svg ref={svgRef} width={1000} height={700} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitationYearPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}