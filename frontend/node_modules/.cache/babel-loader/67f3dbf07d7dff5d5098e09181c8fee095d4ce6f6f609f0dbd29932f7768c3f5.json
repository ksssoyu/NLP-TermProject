{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\CitationYearPage.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography, useTheme } from '@mui/material';\nimport PlaceIcon from '@mui/icons-material/Place';\nimport CallIcon from '@mui/icons-material';\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\nimport { LabelItems } from '~/components/molecule/label';\nimport { useNavigationSelector } from '~/store/reducers/navigateSlice';\nimport ModalLabel from '~/components/molecule/modalLabel';\nimport { CafePlaceContainer, CongestionBox, CongestionItem } from './cafeDetailInfo.styled';\nimport { options, Status } from '~/types/radio';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// ✅ Dummy data for different cafes - now deterministic\nconst cafeData = {\n  'cafe-1': {\n    basePattern: [10, 15, 20, 25, 30, 40, 50, 65, 75, 80, 85, 90,\n    // 0-11시\n    95, 90, 85, 80, 75, 70, 80, 85, 70, 60, 40, 25],\n    // 12-23시\n    recommendedHours: '오전 7-9시, 오후 3-5시'\n  },\n  'cafe-2': {\n    basePattern: [5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 75, 80, 85, 80, 70, 60, 50, 40, 30, 25, 20, 15, 10, 5],\n    recommendedHours: '오후 8-10시, 오전 6-8시'\n  },\n  'cafe-3': {\n    basePattern: [20, 25, 30, 35, 40, 50, 60, 70, 80, 90, 95, 90, 80, 70, 60, 50, 40, 30, 25, 20, 15, 10, 5, 0],\n    recommendedHours: '오전 0-2시, 오후 10-11시'\n  },\n  // Add more cafe data as needed\n  'default': {\n    // Fallback for unknown cafeIds\n    basePattern: [10, 15, 20, 25, 30, 40, 50, 65, 75, 80, 85, 90,\n    // 0-11시\n    95, 90, 85, 80, 75, 70, 80, 85, 70, 60, 40, 25],\n    // 12-23시\n    recommendedHours: '오전 7-9시, 오후 3-5시'\n  }\n};\n\n// ✅ Updated: 시간대별 혼잡도 예측 (cafeId에 따라 다르게, but deterministically)\nconst generateHourlyPrediction = cafeId => {\n  const currentHour = new Date().getHours();\n  const predictions = [];\n  const data = cafeData[cafeId] || cafeData['default'];\n  const basePattern = data.basePattern;\n  for (let i = 0; i < 24; i++) {\n    // ✅ Removed random variation: use basePattern directly\n    let percentage = basePattern[i];\n    let status = Status.spare;\n    if (percentage > 70) status = Status.busy;else if (percentage > 30) status = Status.average;\n    predictions.push({\n      hour: i,\n      percentage: Math.round(percentage),\n      status,\n      isCurrent: i === currentHour\n    });\n  }\n  return predictions;\n};\nconst CafePlaceInfo = ({\n  address,\n  phoneNumber,\n  isCongestion,\n  hasPlugCount,\n  isCleanCount,\n  viewerCount,\n  seatVacantCount,\n  seatTotalCount,\n  cafeId\n}) => {\n  _s();\n  var _cafeData$cafeId;\n  const theme = useTheme();\n  const grayColor = theme.palette.grey[100];\n  const iconColor = theme.palette.grey[300];\n  const mainColor = theme.palette.primary.main;\n  const navigate = useNavigationSelector();\n  // Pass cafeId to generateHourlyPrediction\n  const hourlyPredictions = generateHourlyPrediction(cafeId);\n\n  // Get recommended hours based on cafeId\n  const recommendedVisitHours = ((_cafeData$cafeId = cafeData[cafeId]) === null || _cafeData$cafeId === void 0 ? void 0 : _cafeData$cafeId.recommendedHours) || cafeData['default'].recommendedHours;\n\n  // ✅ 혼잡도 판단 기준: 좌석 점유율 기반\n  let status = Status.unknown;\n  if (seatTotalCount > 0) {\n    const occupiedRatio = (seatTotalCount - seatVacantCount) / seatTotalCount;\n    if (occupiedRatio <= 0.3) status = Status.spare;else if (occupiedRatio <= 0.7) status = Status.average;else status = Status.busy;\n  }\n  const viewerOption = options[status];\n\n  // 혼잡도 상태별 색상 매핑\n  const getStatusColor = status => {\n    switch (status) {\n      case Status.spare:\n        return '#4CAF50';\n      // 초록\n      case Status.average:\n        return '#FF9800';\n      // 주황\n      case Status.busy:\n        return '#F44336';\n      // 빨강\n      default:\n        return '#9E9E9E';\n      // 회색\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case Status.spare:\n        return '여유';\n      case Status.average:\n        return '보통';\n      case Status.busy:\n        return '혼잡';\n      default:\n        return '알수없음';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CafePlaceContainer, {\n    color: grayColor,\n    icon: iconColor,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: viewerOption.color2,\n        color: viewerOption.color,\n        padding: '8px 12px',\n        borderRadius: '10px',\n        marginTop: '12px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '40px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        textAlign: \"center\",\n        children: [\"\\uD83D\\uDC40 \\uD604\\uC7AC\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#ff4545',\n            fontWeight: 'bold'\n          },\n          children: viewerCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), \"\\uBA85\\uC774 \\uBCF4\\uACE0 \\uC788\\uC5B4\\uC694\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: '#f5f5f5',\n        color: '#333',\n        padding: '8px 12px',\n        borderRadius: '10px',\n        marginTop: '8px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '36px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        textAlign: \"center\",\n        children: [\"\\uD83E\\uDE91 \\uC2E4\\uC2DC\\uAC04 \\uC88C\\uC11D \\uC0C1\\uD0DC: \", seatVacantCount, \" / \", seatTotalCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          marginBottom: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TrendingUpIcon, {\n          sx: {\n            marginRight: '8px',\n            color: mainColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: mainColor,\n            fontWeight: 'bold'\n          },\n          children: \"\\uC624\\uB298 \\uC2DC\\uAC04\\uB300\\uBCC4 \\uD63C\\uC7A1\\uB3C4 \\uC608\\uCE21\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          color: '#666',\n          marginBottom: '16px'\n        },\n        children: \"* \\uACFC\\uAC70 7\\uC77C\\uAC04 \\uD1B5\\uACC4 \\uB370\\uC774\\uD130\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uC608\\uCE21\\uB41C \\uACB0\\uACFC\\uC785\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          backgroundColor: '#fafafa',\n          padding: '16px',\n          borderRadius: '12px',\n          border: '1px solid #e0e0e0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(12, 1fr)',\n            gap: '4px',\n            marginBottom: '8px'\n          },\n          children: hourlyPredictions.slice(6, 18).map(prediction => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                height: '40px',\n                backgroundColor: getStatusColor(prediction.status),\n                borderRadius: '4px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginBottom: '4px',\n                border: prediction.isCurrent ? '2px solid #1976d2' : 'none',\n                position: 'relative'\n              },\n              children: [prediction.isCurrent && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  position: 'absolute',\n                  top: '-8px',\n                  fontSize: '10px',\n                  color: '#1976d2',\n                  fontWeight: 'bold'\n                },\n                children: \"\\u25CF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  color: 'white',\n                  fontWeight: 'bold'\n                },\n                children: [prediction.percentage, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              sx: {\n                fontSize: '10px'\n              },\n              children: [prediction.hour, \"\\uC2DC\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, prediction.hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '16px',\n            marginTop: '12px'\n          },\n          children: [Status.spare, Status.average, Status.busy].map(statusType => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: '12px',\n                height: '12px',\n                backgroundColor: getStatusColor(statusType),\n                borderRadius: '2px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: getStatusText(statusType)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this)]\n          }, statusType, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: '12px',\n          padding: '12px',\n          backgroundColor: '#e8f5e8',\n          borderRadius: '8px',\n          border: '1px solid #4CAF50'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#2e7d32',\n            fontWeight: 'bold'\n          },\n          children: \"\\uD83D\\uDCA1 \\uCD94\\uCC9C \\uBC29\\uBB38 \\uC2DC\\uAC04\\uB300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#2e7d32',\n            marginTop: '4px'\n          },\n          children: recommendedVisitHours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      mt: \"24px\",\n      mb: \"2px\",\n      children: \"\\uB9E4\\uC7A5 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }, this), navigate !== 'search-detail' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: \"cafe-info\",\n        children: [/*#__PURE__*/_jsxDEV(PlaceIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"cafe-info\",\n        children: [/*#__PURE__*/_jsxDEV(CallIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: phoneNumber && phoneNumber.trim() !== '' ? phoneNumber : '정보 없음'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), isCongestion && /*#__PURE__*/_jsxDEV(CongestionBox, {\n      children: [/*#__PURE__*/_jsxDEV(CongestionItem, {\n        children: [/*#__PURE__*/_jsxDEV(LabelItems, {\n          hasPlug: true,\n          isClean: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: mainColor,\n          children: hasPlugCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CongestionItem, {\n        children: [/*#__PURE__*/_jsxDEV(LabelItems, {\n          isClean: true,\n          hasPlug: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: mainColor,\n          children: isCleanCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this), !isCongestion && navigate === 'search-detail' ? /*#__PURE__*/_jsxDEV(ModalLabel, {\n      type: \"search\",\n      onClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(ModalLabel, {\n      onClick: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(CafePlaceInfo, \"7j+k5Y/gPyVZDVAxkfZ5B39QlSY=\", false, function () {\n  return [useTheme, useNavigationSelector];\n});\n_c = CafePlaceInfo;\nexport default CafePlaceInfo;\nvar _c;\n$RefreshReg$(_c, \"CafePlaceInfo\");","map":{"version":3,"names":["Box","Typography","useTheme","PlaceIcon","CallIcon","TrendingUpIcon","LabelItems","useNavigationSelector","ModalLabel","CafePlaceContainer","CongestionBox","CongestionItem","options","Status","jsxDEV","_jsxDEV","Fragment","_Fragment","cafeData","basePattern","recommendedHours","generateHourlyPrediction","cafeId","currentHour","Date","getHours","predictions","data","i","percentage","status","spare","busy","average","push","hour","Math","round","isCurrent","CafePlaceInfo","address","phoneNumber","isCongestion","hasPlugCount","isCleanCount","viewerCount","seatVacantCount","seatTotalCount","_s","_cafeData$cafeId","theme","grayColor","palette","grey","iconColor","mainColor","primary","main","navigate","hourlyPredictions","recommendedVisitHours","unknown","occupiedRatio","viewerOption","getStatusColor","getStatusText","color","icon","children","sx","backgroundColor","color2","padding","borderRadius","marginTop","display","justifyContent","alignItems","height","variant","textAlign","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","marginRight","border","gridTemplateColumns","gap","slice","map","prediction","position","top","fontSize","statusType","width","mt","mb","className","trim","hasPlug","isClean","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/CitationYearPage.jsx"],"sourcesContent":["import { Box, Typography, useTheme } from '@mui/material';\r\nimport PlaceIcon from '@mui/icons-material/Place';\r\nimport CallIcon from '@mui/icons-material';\r\nimport TrendingUpIcon from '@mui/icons-material/TrendingUp';\r\n\r\nimport { LabelItems } from '~/components/molecule/label';\r\nimport { useNavigationSelector } from '~/store/reducers/navigateSlice';\r\nimport ModalLabel from '~/components/molecule/modalLabel';\r\nimport {\r\n    CafePlaceContainer,\r\n    CongestionBox,\r\n    CongestionItem,\r\n} from './cafeDetailInfo.styled';\r\nimport { options, Status } from '~/types/radio';\r\n\r\ninterface CafePlaceInfoProps {\r\n    address: string;\r\n    phoneNumber: string;\r\n    isCongestion: boolean;\r\n    hasPlugCount: number;\r\n    isCleanCount: number;\r\n    viewerCount: number;\r\n    seatVacantCount: number;\r\n    seatTotalCount: number;\r\n    cafeId: string;\r\n}\r\n\r\n// ✅ Dummy data for different cafes - now deterministic\r\nconst cafeData = {\r\n    'cafe-1': {\r\n        basePattern: [10, 15, 20, 25, 30, 40, 50, 65, 75, 80, 85, 90, // 0-11시\r\n            95, 90, 85, 80, 75, 70, 80, 85, 70, 60, 40, 25], // 12-23시\r\n        recommendedHours: '오전 7-9시, 오후 3-5시',\r\n    },\r\n    'cafe-2': {\r\n        basePattern: [5, 10, 15, 20, 25, 30, 40, 50, 60, 70, 75, 80,\r\n            85, 80, 70, 60, 50, 40, 30, 25, 20, 15, 10, 5],\r\n        recommendedHours: '오후 8-10시, 오전 6-8시',\r\n    },\r\n    'cafe-3': {\r\n        basePattern: [20, 25, 30, 35, 40, 50, 60, 70, 80, 90, 95, 90,\r\n            80, 70, 60, 50, 40, 30, 25, 20, 15, 10, 5, 0],\r\n        recommendedHours: '오전 0-2시, 오후 10-11시',\r\n    },\r\n    // Add more cafe data as needed\r\n    'default': { // Fallback for unknown cafeIds\r\n        basePattern: [10, 15, 20, 25, 30, 40, 50, 65, 75, 80, 85, 90, // 0-11시\r\n            95, 90, 85, 80, 75, 70, 80, 85, 70, 60, 40, 25], // 12-23시\r\n        recommendedHours: '오전 7-9시, 오후 3-5시',\r\n    }\r\n};\r\n\r\n// ✅ Updated: 시간대별 혼잡도 예측 (cafeId에 따라 다르게, but deterministically)\r\nconst generateHourlyPrediction = (cafeId: string) => {\r\n    const currentHour = new Date().getHours();\r\n    const predictions = [];\r\n\r\n    const data = cafeData[cafeId] || cafeData['default'];\r\n    const basePattern = data.basePattern;\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n        // ✅ Removed random variation: use basePattern directly\r\n        let percentage = basePattern[i];\r\n\r\n        let status: Status = Status.spare;\r\n        if (percentage > 70) status = Status.busy;\r\n        else if (percentage > 30) status = Status.average;\r\n\r\n        predictions.push({\r\n            hour: i,\r\n            percentage: Math.round(percentage),\r\n            status,\r\n            isCurrent: i === currentHour\r\n        });\r\n    }\r\n\r\n    return predictions;\r\n};\r\n\r\nconst CafePlaceInfo = ({\r\n                           address,\r\n                           phoneNumber,\r\n                           isCongestion,\r\n                           hasPlugCount,\r\n                           isCleanCount,\r\n                           viewerCount,\r\n                           seatVacantCount,\r\n                           seatTotalCount,\r\n                           cafeId,\r\n                       }: CafePlaceInfoProps) => {\r\n    const theme = useTheme();\r\n    const grayColor = theme.palette.grey[100];\r\n    const iconColor = theme.palette.grey[300];\r\n    const mainColor = theme.palette.primary.main;\r\n\r\n    const navigate = useNavigationSelector();\r\n    // Pass cafeId to generateHourlyPrediction\r\n    const hourlyPredictions = generateHourlyPrediction(cafeId);\r\n\r\n    // Get recommended hours based on cafeId\r\n    const recommendedVisitHours = cafeData[cafeId]?.recommendedHours || cafeData['default'].recommendedHours;\r\n\r\n\r\n    // ✅ 혼잡도 판단 기준: 좌석 점유율 기반\r\n    let status: Status = Status.unknown;\r\n    if (seatTotalCount > 0) {\r\n        const occupiedRatio = (seatTotalCount - seatVacantCount) / seatTotalCount;\r\n        if (occupiedRatio <= 0.3) status = Status.spare;\r\n        else if (occupiedRatio <= 0.7) status = Status.average;\r\n        else status = Status.busy;\r\n    }\r\n\r\n    const viewerOption = options[status];\r\n\r\n    // 혼잡도 상태별 색상 매핑\r\n    const getStatusColor = (status: Status) => {\r\n        switch (status) {\r\n            case Status.spare: return '#4CAF50'; // 초록\r\n            case Status.average: return '#FF9800'; // 주황\r\n            case Status.busy: return '#F44336'; // 빨강\r\n            default: return '#9E9E9E'; // 회색\r\n        }\r\n    };\r\n\r\n    const getStatusText = (status: Status) => {\r\n        switch (status) {\r\n            case Status.spare: return '여유';\r\n            case Status.average: return '보통';\r\n            case Status.busy: return '혼잡';\r\n            default: return '알수없음';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <CafePlaceContainer color={grayColor} icon={iconColor}>\r\n            {/* ✅ 시청자 수 박스 */}\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: viewerOption.color2,\r\n                    color: viewerOption.color,\r\n                    padding: '8px 12px',\r\n                    borderRadius: '10px',\r\n                    marginTop: '12px',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: '40px',\r\n                }}\r\n            >\r\n                <Typography variant=\"subtitle2\" textAlign=\"center\">\r\n                    👀 현재{' '}\r\n                    <span style={{ color: '#ff4545', fontWeight: 'bold' }}>\r\n            {viewerCount}\r\n          </span>\r\n                    명이 보고 있어요\r\n                </Typography>\r\n            </Box>\r\n\r\n            {/* ✅ 실시간 좌석 상태 박스 */}\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: '#f5f5f5',\r\n                    color: '#333',\r\n                    padding: '8px 12px',\r\n                    borderRadius: '10px',\r\n                    marginTop: '8px',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: '36px',\r\n                }}\r\n            >\r\n                <Typography variant=\"subtitle2\" textAlign=\"center\">\r\n                    🪑 실시간 좌석 상태: {seatVacantCount} / {seatTotalCount}\r\n                </Typography>\r\n            </Box>\r\n\r\n            {/* ✅ 새로 추가: 시간대별 혼잡도 예측 */}\r\n            <Box sx={{ marginTop: '20px', marginBottom: '20px' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', marginBottom: '12px' }}>\r\n                    <TrendingUpIcon sx={{ marginRight: '8px', color: mainColor }} />\r\n                    <Typography variant=\"h6\" sx={{ color: mainColor, fontWeight: 'bold' }}>\r\n                        오늘 시간대별 혼잡도 예측\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Typography variant=\"body2\" sx={{ color: '#666', marginBottom: '16px' }}>\r\n                    * 과거 7일간 통계 데이터를 기반으로 예측된 결과입니다\r\n                </Typography>\r\n\r\n                {/* 시간대별 차트 */}\r\n                <Box sx={{\r\n                    backgroundColor: '#fafafa',\r\n                    padding: '16px',\r\n                    borderRadius: '12px',\r\n                    border: '1px solid #e0e0e0'\r\n                }}>\r\n                    <Box sx={{\r\n                        display: 'grid',\r\n                        gridTemplateColumns: 'repeat(12, 1fr)',\r\n                        gap: '4px',\r\n                        marginBottom: '8px'\r\n                    }}>\r\n                        {hourlyPredictions.slice(6, 18).map((prediction) => (\r\n                            <Box key={prediction.hour} sx={{ textAlign: 'center' }}>\r\n                                <Box\r\n                                    sx={{\r\n                                        height: '40px',\r\n                                        backgroundColor: getStatusColor(prediction.status),\r\n                                        borderRadius: '4px',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'center',\r\n                                        marginBottom: '4px',\r\n                                        border: prediction.isCurrent ? '2px solid #1976d2' : 'none',\r\n                                        position: 'relative'\r\n                                    }}\r\n                                >\r\n                                    {prediction.isCurrent && (\r\n                                        <Box sx={{\r\n                                            position: 'absolute',\r\n                                            top: '-8px',\r\n                                            fontSize: '10px',\r\n                                            color: '#1976d2',\r\n                                            fontWeight: 'bold'\r\n                                        }}>\r\n                                            ●\r\n                                        </Box>\r\n                                    )}\r\n                                    <Typography variant=\"caption\" sx={{ color: 'white', fontWeight: 'bold' }}>\r\n                                        {prediction.percentage}%\r\n                                    </Typography>\r\n                                </Box>\r\n                                <Typography variant=\"caption\" sx={{ fontSize: '10px' }}>\r\n                                    {prediction.hour}시\r\n                                </Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </Box>\r\n\r\n                    {/* 범례 */}\r\n                    <Box sx={{ display: 'flex', justifyContent: 'center', gap: '16px', marginTop: '12px' }}>\r\n                        {[Status.spare, Status.average, Status.busy].map((statusType) => (\r\n                            <Box key={statusType} sx={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                                <Box sx={{\r\n                                    width: '12px',\r\n                                    height: '12px',\r\n                                    backgroundColor: getStatusColor(statusType),\r\n                                    borderRadius: '2px'\r\n                                }} />\r\n                                <Typography variant=\"caption\">\r\n                                    {getStatusText(statusType)}\r\n                                </Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* 추천 시간대 */}\r\n                <Box sx={{\r\n                    marginTop: '12px',\r\n                    padding: '12px',\r\n                    backgroundColor: '#e8f5e8',\r\n                    borderRadius: '8px',\r\n                    border: '1px solid #4CAF50'\r\n                }}>\r\n                    <Typography variant=\"body2\" sx={{ color: '#2e7d32', fontWeight: 'bold' }}>\r\n                        💡 추천 방문 시간대\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: '#2e7d32', marginTop: '4px' }}>\r\n                        {recommendedVisitHours}\r\n                    </Typography>\r\n                </Box>\r\n            </Box>\r\n\r\n            <Typography variant=\"h4\" mt=\"24px\" mb=\"2px\">\r\n                매장 정보\r\n            </Typography>\r\n\r\n            {navigate !== 'search-detail' && (\r\n                <>\r\n                    <Box className=\"cafe-info\">\r\n                        <PlaceIcon />\r\n                        <Typography variant=\"body2\">{address}</Typography>\r\n                    </Box>\r\n\r\n                    <Box className=\"cafe-info\">\r\n                        <CallIcon />\r\n                        <Typography variant=\"body2\">\r\n                            {phoneNumber && phoneNumber.trim() !== ''\r\n                                ? phoneNumber\r\n                                : '정보 없음'}\r\n                        </Typography>\r\n                    </Box>\r\n                </>\r\n            )}\r\n\r\n            {isCongestion && (\r\n                <CongestionBox>\r\n                    <CongestionItem>\r\n                        <LabelItems hasPlug isClean={false} />\r\n                        <Typography color={mainColor}>{hasPlugCount}</Typography>\r\n                    </CongestionItem>\r\n                    <CongestionItem>\r\n                        <LabelItems isClean hasPlug={false} />\r\n                        <Typography color={mainColor}>{isCleanCount}</Typography>\r\n                    </CongestionItem>\r\n                </CongestionBox>\r\n            )}\r\n            {!isCongestion && navigate === 'search-detail' ? (\r\n                <ModalLabel type=\"search\" onClick={() => {}} />\r\n            ) : (\r\n                <ModalLabel onClick={() => {}} />\r\n            )}\r\n        </CafePlaceContainer>\r\n    );\r\n};\r\n\r\nexport default CafePlaceInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}