{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\CitationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitationPage() {\n  _s();\n  const [allData, setAllData] = useState({\n    nodes: [],\n    links: []\n  });\n  const [elements, setElements] = useState([]);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    fetch('/citation_graph.json').then(res => res.json()).then(data => {\n      setAllData(data);\n    });\n  }, []);\n  const handleInputChange = e => {\n    const keyword = e.target.value;\n    setSearchKeyword(keyword);\n    if (keyword.length < 2) {\n      setSuggestions([]);\n      return;\n    }\n    const matched = allData.nodes.filter(n => n.name.toLowerCase().includes(keyword.toLowerCase())).slice(0, 10);\n    setSuggestions(matched);\n  };\n  const handleSuggestionClick = node => {\n    const paperId = node.id;\n    const relatedLinks = allData.links.filter(link => link.source === paperId || link.target === paperId);\n    const relatedNodeIds = new Set([paperId, ...relatedLinks.map(link => link.source), ...relatedLinks.map(link => link.target)]);\n    const limitedNodeIds = Array.from(relatedNodeIds).slice(0, 60);\n    const filteredNodes = allData.nodes.filter(n => limitedNodeIds.includes(n.id));\n    const filteredLinks = relatedLinks.filter(link => limitedNodeIds.includes(link.source) && limitedNodeIds.includes(link.target));\n\n    // Cytoscape용 elements 변환\n    const newElements = [...filteredNodes.map(n => ({\n      data: {\n        id: n.id,\n        label: n.name,\n        year: n.year\n      }\n    })), ...filteredLinks.map(l => ({\n      data: {\n        source: l.source,\n        target: l.target\n      }\n    }))];\n    setElements(newElements);\n    setSuggestions([]);\n    setSearchKeyword(node.name);\n  };\n  const layout = {\n    name: 'cose',\n    // force-directed 유사 레이아웃\n    animate: true,\n    animationDuration: 1000\n  };\n  const stylesheet = [{\n    selector: 'node',\n    style: {\n      'label': 'data(label)',\n      'background-color': '#007bff',\n      'color': '#000',\n      'text-valign': 'center',\n      'text-halign': 'center',\n      'width': '20px',\n      'height': '20px',\n      'font-size': '8px'\n    }\n  }, {\n    selector: 'edge',\n    style: {\n      'width': 1,\n      'line-color': '#ccc',\n      'curve-style': 'bezier'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchKeyword,\n        onChange: handleInputChange,\n        placeholder: \"\\uB17C\\uBB38 \\uC81C\\uBAA9\\uC73C\\uB85C \\uAC80\\uC0C9\",\n        style: {\n          width: '300px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          position: 'absolute',\n          background: '#fff',\n          border: '1px solid #ddd',\n          listStyle: 'none',\n          padding: '5px',\n          margin: 0,\n          width: '300px',\n          zIndex: 10,\n          maxHeight: '200px',\n          overflowY: 'auto'\n        },\n        children: suggestions.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: '5px',\n            cursor: 'pointer'\n          },\n          onClick: () => handleSuggestionClick(node),\n          children: node.name\n        }, node.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CytoscapeComponent, {\n      elements: elements,\n      style: {\n        width: '100%',\n        height: '90%'\n      },\n      layout: layout,\n      stylesheet: stylesheet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(CitationPage, \"pS7jDdtcrJShOGlHGZjjmlwMxg8=\");\n_c = CitationPage;\nexport default CitationPage;\nvar _c;\n$RefreshReg$(_c, \"CitationPage\");","map":{"version":3,"names":["React","useEffect","useState","CytoscapeComponent","jsxDEV","_jsxDEV","CitationPage","_s","allData","setAllData","nodes","links","elements","setElements","searchKeyword","setSearchKeyword","suggestions","setSuggestions","fetch","then","res","json","data","handleInputChange","e","keyword","target","value","length","matched","filter","n","name","toLowerCase","includes","slice","handleSuggestionClick","node","paperId","id","relatedLinks","link","source","relatedNodeIds","Set","map","limitedNodeIds","Array","from","filteredNodes","filteredLinks","newElements","label","year","l","layout","animate","animationDuration","stylesheet","selector","style","width","height","children","margin","position","type","onChange","placeholder","padding","fileName","_jsxFileName","lineNumber","columnNumber","background","border","listStyle","zIndex","maxHeight","overflowY","cursor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/CitationPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CytoscapeComponent from 'react-cytoscapejs';\r\n\r\nfunction CitationPage() {\r\n  const [allData, setAllData] = useState({ nodes: [], links: [] });\r\n  const [elements, setElements] = useState([]);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/citation_graph.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setAllData(data);\r\n      });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const keyword = e.target.value;\r\n    setSearchKeyword(keyword);\r\n\r\n    if (keyword.length < 2) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    const matched = allData.nodes\r\n      .filter(n => n.name.toLowerCase().includes(keyword.toLowerCase()))\r\n      .slice(0, 10);\r\n    setSuggestions(matched);\r\n  };\r\n\r\n  const handleSuggestionClick = (node) => {\r\n    const paperId = node.id;\r\n\r\n    const relatedLinks = allData.links.filter(\r\n      link => link.source === paperId || link.target === paperId\r\n    );\r\n\r\n    const relatedNodeIds = new Set([\r\n      paperId,\r\n      ...relatedLinks.map(link => link.source),\r\n      ...relatedLinks.map(link => link.target)\r\n    ]);\r\n\r\n    const limitedNodeIds = Array.from(relatedNodeIds).slice(0, 60);\r\n    const filteredNodes = allData.nodes.filter(n => limitedNodeIds.includes(n.id));\r\n    const filteredLinks = relatedLinks.filter(\r\n      link => limitedNodeIds.includes(link.source) && limitedNodeIds.includes(link.target)\r\n    );\r\n\r\n    // Cytoscape용 elements 변환\r\n    const newElements = [\r\n      ...filteredNodes.map(n => ({\r\n        data: { id: n.id, label: n.name, year: n.year }\r\n      })),\r\n      ...filteredLinks.map(l => ({\r\n        data: { source: l.source, target: l.target }\r\n      }))\r\n    ];\r\n\r\n    setElements(newElements);\r\n    setSuggestions([]);\r\n    setSearchKeyword(node.name);\r\n  };\r\n\r\n  const layout = {\r\n    name: 'cose',  // force-directed 유사 레이아웃\r\n    animate: true,\r\n    animationDuration: 1000\r\n  };\r\n\r\n  const stylesheet = [\r\n    {\r\n      selector: 'node',\r\n      style: {\r\n        'label': 'data(label)',\r\n        'background-color': '#007bff',\r\n        'color': '#000',\r\n        'text-valign': 'center',\r\n        'text-halign': 'center',\r\n        'width': '20px',\r\n        'height': '20px',\r\n        'font-size': '8px'\r\n      }\r\n    },\r\n    {\r\n      selector: 'edge',\r\n      style: {\r\n        'width': 1,\r\n        'line-color': '#ccc',\r\n        'curve-style': 'bezier'\r\n      }\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100vh' }}>\r\n      <div style={{ margin: '10px', position: 'relative' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchKeyword}\r\n          onChange={handleInputChange}\r\n          placeholder=\"논문 제목으로 검색\"\r\n          style={{ width: '300px', padding: '5px' }}\r\n        />\r\n        {suggestions.length > 0 && (\r\n          <ul style={{\r\n            position: 'absolute',\r\n            background: '#fff',\r\n            border: '1px solid #ddd',\r\n            listStyle: 'none',\r\n            padding: '5px',\r\n            margin: 0,\r\n            width: '300px',\r\n            zIndex: 10,\r\n            maxHeight: '200px',\r\n            overflowY: 'auto'\r\n          }}>\r\n            {suggestions.map(node => (\r\n              <li key={node.id} style={{ padding: '5px', cursor: 'pointer' }}\r\n                  onClick={() => handleSuggestionClick(node)}>\r\n                {node.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <CytoscapeComponent\r\n        elements={elements}\r\n        style={{ width: '100%', height: '90%' }}\r\n        layout={layout}\r\n        stylesheet={stylesheet}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}