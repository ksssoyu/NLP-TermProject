{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\CitationPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CitationPage() {\n  _s();\n  const svgRef = useRef();\n  const [allData, setAllData] = useState(null);\n  const [visibleData, setVisibleData] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n\n  // 전체 데이터 로딩\n  useEffect(() => {\n    fetch('/citation_graph_with_cluster.json').then(res => res.json()).then(json => {\n      const nodes = json.nodes;\n      const nodeById = new Map(nodes.map(d => [d.id, d]));\n      const links = json.links.map(d => ({\n        source: nodeById.get(d.source),\n        target: nodeById.get(d.target),\n        value: d.weight\n      }));\n      setAllData({\n        nodes,\n        links\n      });\n    });\n  }, []);\n\n  // 검색어 입력시 자동완성 추천\n  const handleInputChange = e => {\n    const keyword = e.target.value;\n    setSearchKeyword(keyword);\n    if (keyword.length < 2 || !allData) {\n      setSuggestions([]);\n      return;\n    }\n    const matched = allData.nodes.filter(n => n.name.toLowerCase().includes(keyword.toLowerCase())).slice(0, 10);\n    setSuggestions(matched);\n  };\n\n  // 검색결과 선택 → ego-network 추출\n  const handleSuggestionClick = node => {\n    const paperId = node.id;\n    const relatedLinks = allData.links.filter(link => link.source.id === paperId || link.target.id === paperId);\n    const relatedNodeIds = new Set([paperId, ...relatedLinks.map(link => link.source.id), ...relatedLinks.map(link => link.target.id)]);\n    const limitedNodeIds = Array.from(relatedNodeIds).slice(0, 300); // ego-network 범위 조절\n    const filteredNodes = allData.nodes.filter(n => limitedNodeIds.includes(n.id));\n    const nodeById = new Map(filteredNodes.map(d => [d.id, d]));\n    const filteredLinks = relatedLinks.filter(link => limitedNodeIds.includes(link.source.id) && limitedNodeIds.includes(link.target.id)).map(link => ({\n      source: nodeById.get(link.source.id),\n      target: nodeById.get(link.target.id),\n      value: link.value\n    }));\n    setVisibleData({\n      nodes: filteredNodes,\n      links: filteredLinks\n    });\n    setSuggestions([]);\n    setSearchKeyword(node.name);\n  };\n\n  // 시각화\n  useEffect(() => {\n    if (!visibleData) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 1000;\n    const height = 700;\n    svg.attr('viewBox', [0, 0, width, height]);\n\n    // Year color scale (viridis colormap)\n    const minYear = d3.min(visibleData.nodes, d => d.year);\n    const maxYear = d3.max(visibleData.nodes, d => d.year);\n    const color = d3.scaleSequential(d3.interpolateViridis).domain([minYear, maxYear]);\n    const simulation = d3.forceSimulation(visibleData.nodes).force('link', d3.forceLink(visibleData.links).id(d => d.id).distance(50)).force('charge', d3.forceManyBody().strength(-100)).force('center', d3.forceCenter(width / 2, height / 2)).force('collision', d3.forceCollide(10));\n    const link = svg.append('g').attr('stroke', '#aaa').attr('stroke-opacity', 0.3).selectAll('line').data(visibleData.links).join('line').attr('stroke-width', d => Math.sqrt(d.value));\n    const node = svg.append('g').attr('stroke', '#fff').attr('stroke-width', 1.0).selectAll('circle').data(visibleData.nodes).join('circle').attr('r', 5).attr('fill', d => color(d.year)).call(drag(simulation));\n\n    // 노드 hover 시 제목 표시\n    node.append(\"title\").text(d => d.name);\n\n    // 중심 노드 강조\n    node.filter(d => d.name === searchKeyword).attr('r', 10).attr('stroke', 'red').attr('stroke-width', 3);\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n    });\n    function drag(simulation) {\n      function dragstarted(event, d) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n      function dragged(event, d) {\n        d.fx = event.x;\n        d.fy = event.y;\n      }\n      function dragended(event, d) {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n      return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n    }\n  }, [visibleData, searchKeyword]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchKeyword,\n        onChange: handleInputChange,\n        placeholder: \"\\uB17C\\uBB38 \\uC81C\\uBAA9 \\uAC80\\uC0C9\",\n        style: {\n          width: '300px',\n          padding: '5px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          position: 'absolute',\n          background: '#fff',\n          border: '1px solid #ddd',\n          listStyle: 'none',\n          padding: '5px',\n          margin: 0,\n          width: '300px',\n          zIndex: 10,\n          maxHeight: '200px',\n          overflowY: 'auto'\n        },\n        children: suggestions.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: '5px',\n            cursor: 'pointer'\n          },\n          onClick: () => handleSuggestionClick(node),\n          children: node.name\n        }, node.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: \"1000\",\n      height: \"700\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n_s(CitationPage, \"NVd7zxMz4NHSqPdFLKo+aQpj3BU=\");\n_c = CitationPage;\nexport default CitationPage;\nvar _c;\n$RefreshReg$(_c, \"CitationPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","CitationPage","_s","svgRef","allData","setAllData","visibleData","setVisibleData","searchKeyword","setSearchKeyword","suggestions","setSuggestions","fetch","then","res","json","nodes","nodeById","Map","map","d","id","links","source","get","target","value","weight","handleInputChange","e","keyword","length","matched","filter","n","name","toLowerCase","includes","slice","handleSuggestionClick","node","paperId","relatedLinks","link","relatedNodeIds","Set","limitedNodeIds","Array","from","filteredNodes","filteredLinks","svg","select","current","selectAll","remove","width","height","attr","minYear","min","year","maxYear","max","color","scaleSequential","interpolateViridis","domain","simulation","forceSimulation","force","forceLink","distance","forceManyBody","strength","forceCenter","forceCollide","append","data","join","Math","sqrt","call","drag","text","on","x","y","dragstarted","event","active","alphaTarget","restart","fx","fy","dragged","dragended","style","children","margin","position","type","onChange","placeholder","padding","fileName","_jsxFileName","lineNumber","columnNumber","background","border","listStyle","zIndex","maxHeight","overflowY","cursor","onClick","ref","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/CitationPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction CitationPage() {\r\n  const svgRef = useRef();\r\n  const [allData, setAllData] = useState(null);\r\n  const [visibleData, setVisibleData] = useState(null);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  // 전체 데이터 로딩\r\n  useEffect(() => {\r\n    fetch('/citation_graph_with_cluster.json')\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        const nodes = json.nodes;\r\n        const nodeById = new Map(nodes.map(d => [d.id, d]));\r\n\r\n        const links = json.links.map(d => ({\r\n          source: nodeById.get(d.source),\r\n          target: nodeById.get(d.target),\r\n          value: d.weight\r\n        }));\r\n\r\n        setAllData({ nodes, links });\r\n      });\r\n  }, []);\r\n\r\n  // 검색어 입력시 자동완성 추천\r\n  const handleInputChange = (e) => {\r\n    const keyword = e.target.value;\r\n    setSearchKeyword(keyword);\r\n\r\n    if (keyword.length < 2 || !allData) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    const matched = allData.nodes\r\n      .filter(n => n.name.toLowerCase().includes(keyword.toLowerCase()))\r\n      .slice(0, 10);\r\n    setSuggestions(matched);\r\n  };\r\n\r\n  // 검색결과 선택 → ego-network 추출\r\n  const handleSuggestionClick = (node) => {\r\n    const paperId = node.id;\r\n    const relatedLinks = allData.links.filter(\r\n      link => link.source.id === paperId || link.target.id === paperId\r\n    );\r\n\r\n    const relatedNodeIds = new Set([\r\n      paperId,\r\n      ...relatedLinks.map(link => link.source.id),\r\n      ...relatedLinks.map(link => link.target.id)\r\n    ]);\r\n\r\n    const limitedNodeIds = Array.from(relatedNodeIds).slice(0, 300); // ego-network 범위 조절\r\n    const filteredNodes = allData.nodes.filter(n => limitedNodeIds.includes(n.id));\r\n\r\n    const nodeById = new Map(filteredNodes.map(d => [d.id, d]));\r\n    const filteredLinks = relatedLinks.filter(\r\n      link => limitedNodeIds.includes(link.source.id) && limitedNodeIds.includes(link.target.id)\r\n    ).map(link => ({\r\n      source: nodeById.get(link.source.id),\r\n      target: nodeById.get(link.target.id),\r\n      value: link.value\r\n    }));\r\n\r\n    setVisibleData({ nodes: filteredNodes, links: filteredLinks });\r\n    setSuggestions([]);\r\n    setSearchKeyword(node.name);\r\n  };\r\n\r\n  // 시각화\r\n  useEffect(() => {\r\n    if (!visibleData) return;\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const width = 1000;\r\n    const height = 700;\r\n\r\n    svg.attr('viewBox', [0, 0, width, height]);\r\n\r\n    // Year color scale (viridis colormap)\r\n    const minYear = d3.min(visibleData.nodes, d => d.year);\r\n    const maxYear = d3.max(visibleData.nodes, d => d.year);\r\n    const color = d3.scaleSequential(d3.interpolateViridis)\r\n      .domain([minYear, maxYear]);\r\n\r\n    const simulation = d3.forceSimulation(visibleData.nodes)\r\n      .force('link', d3.forceLink(visibleData.links).id(d => d.id).distance(50))\r\n      .force('charge', d3.forceManyBody().strength(-100))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('collision', d3.forceCollide(10));\r\n\r\n    const link = svg.append('g')\r\n      .attr('stroke', '#aaa')\r\n      .attr('stroke-opacity', 0.3)\r\n      .selectAll('line')\r\n      .data(visibleData.links)\r\n      .join('line')\r\n      .attr('stroke-width', d => Math.sqrt(d.value));\r\n\r\n    const node = svg.append('g')\r\n      .attr('stroke', '#fff')\r\n      .attr('stroke-width', 1.0)\r\n      .selectAll('circle')\r\n      .data(visibleData.nodes)\r\n      .join('circle')\r\n      .attr('r', 5)\r\n      .attr('fill', d => color(d.year))\r\n      .call(drag(simulation));\r\n\r\n    // 노드 hover 시 제목 표시\r\n    node.append(\"title\").text(d => d.name);\r\n\r\n    // 중심 노드 강조\r\n    node.filter(d => d.name === searchKeyword)\r\n      .attr('r', 10)\r\n      .attr('stroke', 'red')\r\n      .attr('stroke-width', 3);\r\n\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n\r\n      node\r\n        .attr('cx', d => d.x)\r\n        .attr('cy', d => d.y);\r\n    });\r\n\r\n    function drag(simulation) {\r\n      function dragstarted(event, d) {\r\n        if (!event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      }\r\n      function dragged(event, d) {\r\n        d.fx = event.x;\r\n        d.fy = event.y;\r\n      }\r\n      function dragended(event, d) {\r\n        if (!event.active) simulation.alphaTarget(0);\r\n        d.fx = null;\r\n        d.fy = null;\r\n      }\r\n      return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\r\n    }\r\n  }, [visibleData, searchKeyword]);\r\n\r\n  return (\r\n    <div style={{ width: '100%', height: '100vh' }}>\r\n      <div style={{ margin: '10px', position: 'relative' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchKeyword}\r\n          onChange={handleInputChange}\r\n          placeholder=\"논문 제목 검색\"\r\n          style={{ width: '300px', padding: '5px' }}\r\n        />\r\n        {suggestions.length > 0 && (\r\n          <ul style={{\r\n            position: 'absolute',\r\n            background: '#fff',\r\n            border: '1px solid #ddd',\r\n            listStyle: 'none',\r\n            padding: '5px',\r\n            margin: 0,\r\n            width: '300px',\r\n            zIndex: 10,\r\n            maxHeight: '200px',\r\n            overflowY: 'auto'\r\n          }}>\r\n            {suggestions.map(node => (\r\n              <li key={node.id} style={{ padding: '5px', cursor: 'pointer' }}\r\n                  onClick={() => handleSuggestionClick(node)}>\r\n                {node.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <svg ref={svgRef} width=\"1000\" height=\"700\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}