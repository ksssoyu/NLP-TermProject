{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\AuthorYearPage.jsx\",\n  _s = $RefreshSig$();\n// 완성된 코드입니다: AuthorYearPage.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst availableWindows = ['2015_2017', '2016_2018', '2017_2019', '2018_2020', '2019_2021', '2020_2022', '2021_2023', '2022_2024'];\nconst MAX_AUTHORS_PER_CLUSTER = 60;\nfunction AuthorYearPage() {\n  _s();\n  var _top5AuthorsPerCluste;\n  const svgRef = useRef();\n  const [selectedWindow, setSelectedWindow] = useState(availableWindows[0]);\n  const [authorData, setAuthorData] = useState({});\n  const [selectedCluster, setSelectedCluster] = useState(null);\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\n  const [highlightedNodeId, setHighlightedNodeId] = useState(null);\n  const [highlightedClusterNodeId, setHighlightedClusterNodeId] = useState(null);\n  const simulationRef = useRef(null);\n  const [allPapers, setAllPapers] = useState([]);\n  const [top5AuthorsPerCluster, setTop5AuthorsPerCluster] = useState({});\n  useEffect(() => {\n    fetch('citation_graph_with_cluster_v3.json').then(res => res.json()).then(data => setAllPapers(data.nodes || [])).catch(err => console.error('논문 데이터 로딩 실패:', err));\n  }, []);\n  const getAuthorPapers = authorName => {\n    return allPapers.filter(paper => {\n      let authors = [];\n      try {\n        authors = JSON.parse(paper.authors);\n      } catch {\n        var _paper$authors;\n        authors = ((_paper$authors = paper.authors) === null || _paper$authors === void 0 ? void 0 : _paper$authors.split(/,\\s*/)) || [];\n      }\n      return authors.includes(authorName);\n    });\n  };\n  const safeSelector = id => {\n    let cleanedId = id.replace(/[^a-zA-Z0-9_-]/g, '_');\n    if (!/^[a-zA-Z_]/.test(cleanedId)) {\n      cleanedId = '_' + cleanedId;\n    }\n    return cleanedId;\n  };\n  const zoomInToNode = nodeId => {\n    const svg = d3.select(svgRef.current);\n    const width = 1000,\n      height = 700;\n    const node = d3.select(`g#${safeSelector(nodeId)}`);\n    const d = node.datum();\n    if (!d || d.x == null || d.y == null) return;\n    if (simulationRef.current) simulationRef.current.stop();\n    const scale = 1.5;\n    const transform = d3.zoomIdentity.translate(width / 2 - d.x * scale, height / 2 - d.y * scale).scale(scale);\n    const zoom = d3.zoom().on('zoom', event => {\n      svg.select('g').attr('transform', event.transform);\n    });\n    svg.call(zoom);\n    svg.transition().duration(750).call(zoom.transform, transform);\n  };\n  useEffect(() => {\n    setSelectedCluster(null);\n    setSelectedAuthor(null);\n    fetch(`/top60_authors_per_cluster/top60_authors_${selectedWindow}.json`).then(res => res.json()).then(json => {\n      setAuthorData(json.top5_authors_per_cluster || {});\n      const top5Map = {};\n      Object.entries(json.top5_authors_per_cluster || {}).forEach(([cid, authors]) => {\n        top5Map[cid] = authors.slice(0, 5).map(a => a.author);\n      });\n      setTop5AuthorsPerCluster(top5Map);\n    }).catch(() => setAuthorData({}));\n  }, [selectedWindow]);\n  const handleNodeSelect = nodeObj => {\n    var _Object$entries$find;\n    const clusterId = nodeObj.clusterId || ((_Object$entries$find = Object.entries(authorData).find(([cid, authors]) => authors.some(a => a.author === nodeObj.author))) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0]);\n    if (!clusterId) return;\n    const clusterNodeId = `cluster_${clusterId}`;\n    const authorId = nodeObj.author || nodeObj.id;\n    setSelectedCluster(clusterId);\n    setHighlightedNodeId(authorId);\n    setHighlightedClusterNodeId(clusterNodeId);\n    setSelectedAuthor(nodeObj.type === 'author' || nodeObj.author ? authorId : null);\n  };\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('circle').attr('stroke', d => d.id === highlightedNodeId || d.id === highlightedClusterNodeId ? 'red' : '#fff').attr('stroke-width', d => d.id === highlightedNodeId || d.id === highlightedClusterNodeId ? 3 : 1.5).attr('r', d => d.type === 'cluster' ? 25 : d.id === highlightedNodeId ? 12 : 8);\n    if (highlightedNodeId) zoomInToNode(highlightedNodeId);\n  }, [highlightedNodeId, highlightedClusterNodeId]);\n  const isTop5 = selectedAuthor && selectedCluster && ((_top5AuthorsPerCluste = top5AuthorsPerCluster[selectedCluster]) === null || _top5AuthorsPerCluste === void 0 ? void 0 : _top5AuthorsPerCluste.includes(selectedAuthor));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: 1000,\n        height: 700\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f9f9f9',\n        border: '1px solid #ddd',\n        borderRadius: 10,\n        padding: 15,\n        boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n        width: 350,\n        margin: 10\n      },\n      children: [selectedAuthor && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '20px',\n            marginTop: 0\n          },\n          children: [selectedAuthor, \"\\uC758 \\uB17C\\uBB38\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), isTop5 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#ff6600'\n          },\n          children: \"\\uC774 \\uC800\\uC790\\uB294 \\uC774 \\uD074\\uB7EC\\uC2A4\\uD130\\uC758 Top 5 \\uD611\\uC5C5 \\uC800\\uC790 \\uC911 \\uD55C \\uBA85\\uC785\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            maxHeight: 300,\n            overflowY: 'auto',\n            paddingLeft: 15\n          },\n          children: getAuthorPapers(selectedAuthor).slice(0, 10).map((paper, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: paper.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [paper.year, \" \\xB7 \\uC778\\uC6A9\\uC218: \", paper.citationCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !selectedAuthor && selectedCluster && authorData[selectedCluster] && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Top 5 \\uD611\\uC5C5 \\uC800\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: authorData[selectedCluster].slice(0, 5).map((a, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [a.author, \" - \\uD611\\uC5C5 \\uD69F\\uC218: \", a.total_internal_collab_weight]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: 20\n          },\n          children: \"\\uC774 \\uD074\\uB7EC\\uC2A4\\uD130\\uC758 \\uC800\\uC790 \\uBAA9\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            maxHeight: 300,\n            overflowY: 'auto',\n            paddingLeft: 20\n          },\n          children: authorData[selectedCluster].slice(0, MAX_AUTHORS_PER_CLUSTER).map((a, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              cursor: 'pointer',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              backgroundColor: highlightedNodeId === a.author ? '#e0f0ff' : 'transparent'\n            },\n            onMouseEnter: e => e.currentTarget.style.backgroundColor = '#e0f0ff',\n            onMouseLeave: e => e.currentTarget.style.backgroundColor = highlightedNodeId === a.author ? '#e0f0ff' : 'transparent',\n            onClick: () => handleNodeSelect({\n              author: a.author,\n              clusterId: selectedCluster\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              style: {\n                color: highlightedNodeId === a.author ? 'red' : 'inherit'\n              },\n              children: a.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !selectedCluster && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD074\\uB7EC\\uC2A4\\uD130 \\uB610\\uB294 \\uC800\\uC790\\uB97C \\uD074\\uB9AD\\uD558\\uBA74 \\uC0C1\\uC138 \\uC815\\uBCF4\\uAC00 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorYearPage, \"OFda8PMVm/4GSLhOm2eXrTu7y7U=\");\n_c = AuthorYearPage;\nexport default AuthorYearPage;\nvar _c;\n$RefreshReg$(_c, \"AuthorYearPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","availableWindows","MAX_AUTHORS_PER_CLUSTER","AuthorYearPage","_s","_top5AuthorsPerCluste","svgRef","selectedWindow","setSelectedWindow","authorData","setAuthorData","selectedCluster","setSelectedCluster","selectedAuthor","setSelectedAuthor","highlightedNodeId","setHighlightedNodeId","highlightedClusterNodeId","setHighlightedClusterNodeId","simulationRef","allPapers","setAllPapers","top5AuthorsPerCluster","setTop5AuthorsPerCluster","fetch","then","res","json","data","nodes","catch","err","console","error","getAuthorPapers","authorName","filter","paper","authors","JSON","parse","_paper$authors","split","includes","safeSelector","id","cleanedId","replace","test","zoomInToNode","nodeId","svg","select","current","width","height","node","d","datum","x","y","stop","scale","transform","zoomIdentity","translate","zoom","on","event","attr","call","transition","duration","top5_authors_per_cluster","top5Map","Object","entries","forEach","cid","slice","map","a","author","handleNodeSelect","nodeObj","_Object$entries$find","clusterId","find","some","clusterNodeId","authorId","type","selectAll","isTop5","style","display","children","flex","position","ref","fileName","_jsxFileName","lineNumber","columnNumber","background","border","borderRadius","padding","boxShadow","margin","fontSize","marginTop","color","maxHeight","overflowY","paddingLeft","i","marginBottom","name","year","citationCount","total_internal_collab_weight","cursor","backgroundColor","onMouseEnter","e","currentTarget","onMouseLeave","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/AuthorYearPage.jsx"],"sourcesContent":["// 완성된 코드입니다: AuthorYearPage.js\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst availableWindows = [\r\n  '2015_2017', '2016_2018', '2017_2019', '2018_2020',\r\n  '2019_2021', '2020_2022', '2021_2023', '2022_2024'\r\n];\r\n\r\nconst MAX_AUTHORS_PER_CLUSTER = 60;\r\n\r\nfunction AuthorYearPage() {\r\n  const svgRef = useRef();\r\n  const [selectedWindow, setSelectedWindow] = useState(availableWindows[0]);\r\n  const [authorData, setAuthorData] = useState({});\r\n  const [selectedCluster, setSelectedCluster] = useState(null);\r\n  const [selectedAuthor, setSelectedAuthor] = useState(null);\r\n  const [highlightedNodeId, setHighlightedNodeId] = useState(null);\r\n  const [highlightedClusterNodeId, setHighlightedClusterNodeId] = useState(null);\r\n  const simulationRef = useRef(null);\r\n  const [allPapers, setAllPapers] = useState([]);\r\n  const [top5AuthorsPerCluster, setTop5AuthorsPerCluster] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch('citation_graph_with_cluster_v3.json')\r\n      .then(res => res.json())\r\n      .then(data => setAllPapers(data.nodes || []))\r\n      .catch(err => console.error('논문 데이터 로딩 실패:', err));\r\n  }, []);\r\n\r\n  const getAuthorPapers = (authorName) => {\r\n    return allPapers.filter(paper => {\r\n      let authors = [];\r\n      try {\r\n        authors = JSON.parse(paper.authors);\r\n      } catch {\r\n        authors = paper.authors?.split(/,\\s*/) || [];\r\n      }\r\n      return authors.includes(authorName);\r\n    });\r\n  };\r\n\r\n  const safeSelector = (id) => {\r\n    let cleanedId = id.replace(/[^a-zA-Z0-9_-]/g, '_');\r\n    if (!/^[a-zA-Z_]/.test(cleanedId)) {\r\n      cleanedId = '_' + cleanedId;\r\n    }\r\n    return cleanedId;\r\n  };\r\n\r\n  const zoomInToNode = (nodeId) => {\r\n    const svg = d3.select(svgRef.current);\r\n    const width = 1000, height = 700;\r\n    const node = d3.select(`g#${safeSelector(nodeId)}`);\r\n    const d = node.datum();\r\n    if (!d || d.x == null || d.y == null) return;\r\n\r\n    if (simulationRef.current) simulationRef.current.stop();\r\n\r\n    const scale = 1.5;\r\n    const transform = d3.zoomIdentity.translate(width / 2 - d.x * scale, height / 2 - d.y * scale).scale(scale);\r\n    const zoom = d3.zoom().on('zoom', (event) => {\r\n      svg.select('g').attr('transform', event.transform);\r\n    });\r\n    svg.call(zoom);\r\n    svg.transition().duration(750).call(zoom.transform, transform);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedCluster(null);\r\n    setSelectedAuthor(null);\r\n    fetch(`/top60_authors_per_cluster/top60_authors_${selectedWindow}.json`)\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        setAuthorData(json.top5_authors_per_cluster || {});\r\n        const top5Map = {};\r\n        Object.entries(json.top5_authors_per_cluster || {}).forEach(([cid, authors]) => {\r\n          top5Map[cid] = authors.slice(0, 5).map(a => a.author);\r\n        });\r\n        setTop5AuthorsPerCluster(top5Map);\r\n      })\r\n      .catch(() => setAuthorData({}));\r\n  }, [selectedWindow]);\r\n\r\n  const handleNodeSelect = (nodeObj) => {\r\n    const clusterId = nodeObj.clusterId || Object.entries(authorData).find(([cid, authors]) =>\r\n      authors.some(a => a.author === nodeObj.author)\r\n    )?.[0];\r\n\r\n    if (!clusterId) return;\r\n\r\n    const clusterNodeId = `cluster_${clusterId}`;\r\n    const authorId = nodeObj.author || nodeObj.id;\r\n\r\n    setSelectedCluster(clusterId);\r\n    setHighlightedNodeId(authorId);\r\n    setHighlightedClusterNodeId(clusterNodeId);\r\n    setSelectedAuthor(nodeObj.type === 'author' || nodeObj.author ? authorId : null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('circle')\r\n      .attr('stroke', d => (d.id === highlightedNodeId || d.id === highlightedClusterNodeId) ? 'red' : '#fff')\r\n      .attr('stroke-width', d => (d.id === highlightedNodeId || d.id === highlightedClusterNodeId) ? 3 : 1.5)\r\n      .attr('r', d => d.type === 'cluster' ? 25 : (d.id === highlightedNodeId ? 12 : 8));\r\n\r\n    if (highlightedNodeId) zoomInToNode(highlightedNodeId);\r\n  }, [highlightedNodeId, highlightedClusterNodeId]);\r\n\r\n  const isTop5 = selectedAuthor && selectedCluster && top5AuthorsPerCluster[selectedCluster]?.includes(selectedAuthor);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <div style={{ flex: 1, position: 'relative' }}>\r\n        <svg ref={svgRef} width={1000} height={700} />\r\n      </div>\r\n      <div style={{ background: '#f9f9f9', border: '1px solid #ddd', borderRadius: 10, padding: 15, boxShadow: '0 2px 5px rgba(0,0,0,0.1)', width: 350, margin: 10 }}>\r\n        {selectedAuthor && (\r\n          <>\r\n            <h4 style={{ fontSize: '20px', marginTop: 0 }}>{selectedAuthor}의 논문</h4>\r\n            {isTop5 && (\r\n              <p style={{ color: '#ff6600' }}>이 저자는 이 클러스터의 Top 5 협업 저자 중 한 명입니다.</p>\r\n            )}\r\n            <ul style={{ maxHeight: 300, overflowY: 'auto', paddingLeft: 15 }}>\r\n              {getAuthorPapers(selectedAuthor).slice(0, 10).map((paper, i) => (\r\n                <li key={i} style={{ marginBottom: '8px' }}>\r\n                  <strong>{paper.name}</strong><br />\r\n                  <small>{paper.year} · 인용수: {paper.citationCount}</small>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </>\r\n        )}\r\n        {!selectedAuthor && selectedCluster && authorData[selectedCluster] && (\r\n          <>\r\n            <h4 style={{ marginTop: 0 }}>Top 5 협업 저자</h4>\r\n            <ul>\r\n              {authorData[selectedCluster].slice(0, 5).map((a, i) => (\r\n                <li key={i}>{a.author} - 협업 횟수: {a.total_internal_collab_weight}</li>\r\n              ))}\r\n            </ul>\r\n            <h4 style={{ marginTop: 20 }}>이 클러스터의 저자 목록</h4>\r\n            <ol style={{ maxHeight: 300, overflowY: 'auto', paddingLeft: 20 }}>\r\n              {authorData[selectedCluster].slice(0, MAX_AUTHORS_PER_CLUSTER).map((a, i) => (\r\n                <li\r\n                  key={i}\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    padding: '4px 8px',\r\n                    borderRadius: '4px',\r\n                    backgroundColor: highlightedNodeId === a.author ? '#e0f0ff' : 'transparent'\r\n                  }}\r\n                  onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#e0f0ff'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.backgroundColor = highlightedNodeId === a.author ? '#e0f0ff' : 'transparent'}\r\n                  onClick={() => handleNodeSelect({ author: a.author, clusterId: selectedCluster })}\r\n                >\r\n                  <strong style={{ color: highlightedNodeId === a.author ? 'red' : 'inherit' }}>{a.author}</strong>\r\n                </li>\r\n              ))}\r\n            </ol>\r\n          </>\r\n        )}\r\n        {!selectedCluster && (\r\n          <p>클러스터 또는 저자를 클릭하면 상세 정보가 표시됩니다.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorYearPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}