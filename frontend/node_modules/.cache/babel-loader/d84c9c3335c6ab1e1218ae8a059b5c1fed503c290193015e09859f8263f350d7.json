{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\AuthorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthorPage() {\n  _s();\n  var _selectedNode$collabo;\n  const svgRef = useRef();\n  const [allData, setAllData] = useState(null);\n  const [visibleData, setVisibleData] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const simulationRef = useRef(null);\n  const [externalClusterMap, setExternalClusterMap] = useState({});\n  useEffect(() => {\n    fetch('citation_graph_with_cluster_v3.json').then(res => res.json()).then(data => setAllPapers(data.nodes || [])).catch(err => console.error('논문 데이터 로딩 실패:', err));\n  }, []);\n  const getAuthorPapers = authorName => {\n    return allPapers.filter(paper => {\n      let authors = [];\n      try {\n        authors = JSON.parse(paper.authors);\n      } catch {\n        var _paper$authors;\n        authors = ((_paper$authors = paper.authors) === null || _paper$authors === void 0 ? void 0 : _paper$authors.split(/,\\s*/)) || [];\n      }\n      return authors.includes(authorName);\n    });\n  };\n  useEffect(() => {\n    Promise.all([fetch('/coauthorship_graph_with_year_cluster.json').then(res => res.json()), fetch('/external_cluster_links.json').then(res => res.json())]).then(([graphData, externalMap]) => {\n      const nodes = graphData.nodes.map(d => ({\n        ...d,\n        name: d.id || ''\n      }));\n      const nodeById = new Map(nodes.map(d => [d.id, d]));\n      const links = graphData.links.map(d => ({\n        source: nodeById.get(d.source),\n        target: nodeById.get(d.target),\n        value: d.weight,\n        papers: d.papers\n      }));\n      setAllData({\n        nodes,\n        links,\n        nodeById\n      });\n      setExternalClusterMap(externalMap);\n    });\n  }, []);\n  const handleInputChange = e => {\n    const keyword = e.target.value;\n    setSearchKeyword(keyword);\n    if (!keyword || !allData || !Array.isArray(allData.nodes)) {\n      setSuggestions([]);\n      return;\n    }\n    const matched = allData.nodes.filter(n => typeof n.name === 'string' && n.name.toLowerCase().includes(keyword.toLowerCase())).slice(0, 10);\n    setSuggestions(matched);\n  };\n  const handleSearch = () => {\n    if (!allData) return;\n    const matchedNode = allData.nodes.find(n => typeof n.name === 'string' && n.name.toLowerCase() === searchKeyword.toLowerCase());\n    if (matchedNode) {\n      handleNodeSelection(matchedNode);\n    } else {\n      alert('해당 저자를 찾을 수 없습니다.');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const handleNodeSelection = node => {\n    const mainClusterId = node.cluster_id;\n    const clusterNodes = allData.nodes.filter(n => n.cluster_id === mainClusterId);\n    const clusterGraph = new Map();\n    for (const link of allData.links) {\n      if (link.source.cluster_id === mainClusterId && link.target.cluster_id === mainClusterId) {\n        clusterGraph.set(link.source.id, (clusterGraph.get(link.source.id) || []).concat(link.target.id));\n        clusterGraph.set(link.target.id, (clusterGraph.get(link.target.id) || []).concat(link.source.id));\n      }\n    }\n    const bfsQueue = [node.id];\n    const visited = new Set([node.id]);\n    const bfsClusterIds = [node.id];\n    while (bfsQueue.length > 0 && bfsClusterIds.length < 10) {\n      const current = bfsQueue.shift();\n      const neighbors = clusterGraph.get(current) || [];\n      for (const neighbor of neighbors) {\n        if (!visited.has(neighbor)) {\n          visited.add(neighbor);\n          bfsQueue.push(neighbor);\n          bfsClusterIds.push(neighbor);\n          if (bfsClusterIds.length >= 10) break;\n        }\n      }\n    }\n    const sameClusterNodes = bfsClusterIds.map(id => allData.nodeById.get(id));\n    const nodeIdsInCluster = new Set(sameClusterNodes.map(n => n.id));\n    const neighborScores = new Map();\n    for (const link of allData.links) {\n      var _externalClusterMap$m, _externalClusterMap$m2;\n      const sourceId = link.source.id;\n      const targetId = link.target.id;\n      const sourceCluster = link.source.cluster_id;\n      const targetCluster = link.target.cluster_id;\n      const value = link.value;\n      const srcInMain = nodeIdsInCluster.has(sourceId);\n      const tgtInMain = nodeIdsInCluster.has(targetId);\n      if (srcInMain && !tgtInMain && (_externalClusterMap$m = externalClusterMap[mainClusterId]) !== null && _externalClusterMap$m !== void 0 && _externalClusterMap$m.some(c => c.cluster_id === targetCluster)) {\n        neighborScores.set(targetId, (neighborScores.get(targetId) || 0) + value);\n      } else if (!srcInMain && tgtInMain && (_externalClusterMap$m2 = externalClusterMap[mainClusterId]) !== null && _externalClusterMap$m2 !== void 0 && _externalClusterMap$m2.some(c => c.cluster_id === sourceCluster)) {\n        neighborScores.set(sourceId, (neighborScores.get(sourceId) || 0) + value);\n      }\n    }\n    const extraNodesFromCluster = [...neighborScores.entries()].sort((a, b) => b[1] - a[1]).slice(0, 10).map(([id]) => allData.nodeById.get(id));\n    const visualizedIds = new Set([...sameClusterNodes, ...extraNodesFromCluster].map(n => n.id));\n    const directlyConnected = allData.links.filter(link => link.source.id === node.id && !visualizedIds.has(link.target.id) || link.target.id === node.id && !visualizedIds.has(link.source.id));\n    const bfsDirectNeighbors = directlyConnected.map(link => link.source.id === node.id ? link.target.id : link.source.id).slice(0, 10).map(id => allData.nodeById.get(id));\n    const finalNodes = [...sameClusterNodes, ...extraNodesFromCluster, ...bfsDirectNeighbors];\n    const nodeById = new Map(finalNodes.map(n => [n.id, n]));\n    const finalLinks = allData.links.filter(link => nodeById.has(link.source.id) && nodeById.has(link.target.id)).map(link => ({\n      source: nodeById.get(link.source.id),\n      target: nodeById.get(link.target.id),\n      value: link.value,\n      papers: link.papers\n    }));\n    const collaborations = finalLinks.filter(l => l.source.id === node.id || l.target.id === node.id).map(link => ({\n      ...link,\n      other: link.source.id === node.id ? link.target : link.source\n    }));\n    setVisibleData({\n      nodes: finalNodes,\n      links: finalLinks\n    });\n    setSuggestions([]);\n    setSearchKeyword(node.name);\n    setSelectedNode({\n      ...node,\n      collaborations\n    });\n  };\n  const zoomInToNode = node => {\n    const svg = d3.select(svgRef.current);\n    const width = 1000,\n      height = 700;\n    if (!node || node.x == null || node.y == null) return;\n    if (simulationRef.current) simulationRef.current.stop();\n    const scale = 1.5;\n    const transform = d3.zoomIdentity.translate(width / 2 - node.x * scale, height / 2 - node.y * scale).scale(scale);\n    const zoom = d3.zoom().on('zoom', event => {\n      svg.select('g').attr('transform', event.transform);\n    });\n    svg.call(zoom);\n    svg.transition().duration(750).call(zoom.transform, transform);\n  };\n  useEffect(() => {\n    if (!visibleData) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 1000;\n    const height = 700;\n    svg.attr('viewBox', [0, 0, width, height]);\n    const svgGroup = svg.append('g');\n    const allClusters = [...new Set(visibleData.nodes.map(d => d.cluster_id))];\n    const color = d3.scaleOrdinal(d3.schemeCategory10).domain(allClusters);\n    const simulation = d3.forceSimulation(visibleData.nodes).force('link', d3.forceLink(visibleData.links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-150)).force('center', d3.forceCenter(width / 2, height / 2)).force('collision', d3.forceCollide(25));\n    simulationRef.current = simulation;\n    const link = svgGroup.append('g').attr('stroke', '#aaa').attr('stroke-opacity', 0.3).selectAll('line').data(visibleData.links).join('line').attr('stroke-width', d => Math.sqrt(d.value));\n    const nodeGroup = svgGroup.append('g').selectAll('g').data(visibleData.nodes).join('g').call(drag(simulation)).on('click', (event, d) => {\n      handleNodeSelection(d);\n    });\n    nodeGroup.append('circle').attr('r', d => selectedNode && d.id === selectedNode.id ? 15 : 10).attr('fill', d => color(d.cluster_id)).attr('stroke', d => selectedNode && d.id === selectedNode.id ? 'red' : '#fff').attr('stroke-width', d => selectedNode && d.id === selectedNode.id ? 3 : 1).style('cursor', 'pointer');\n    nodeGroup.append('text').text(d => typeof d.name === 'string' && d.name.length > 25 ? d.name.substring(0, 25) + \"...\" : d.name).attr('text-anchor', 'middle').attr('y', -15).style('font-size', '10px').style('cursor', 'pointer');\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      nodeGroup.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => {\n      svgGroup.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    function drag(simulation) {\n      return d3.drag().on(\"start\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }).on(\"drag\", (event, d) => {\n        d.fx = event.x;\n        d.fy = event.y;\n      }).on(\"end\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      });\n    }\n  }, [visibleData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 10,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n          display: 'flex',\n          gap: '10px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchKeyword,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\uC800\\uC790 \\uC774\\uB984 \\uAC80\\uC0C9\",\n          style: {\n            width: '300px',\n            padding: '8px 12px',\n            borderRadius: '5px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          style: {\n            padding: '8px 16px',\n            borderRadius: '5px',\n            border: 'none',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            cursor: 'pointer'\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            position: 'absolute',\n            top: '50px',\n            background: '#fff',\n            border: '1px solid #ddd',\n            listStyle: 'none',\n            padding: '5px',\n            margin: 0,\n            width: '300px',\n            zIndex: 20,\n            maxHeight: '200px',\n            overflowY: 'auto',\n            borderRadius: '5px',\n            boxShadow: '0 2px 5px rgba(0,0,0,0.15)'\n          },\n          children: suggestions.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '5px',\n              cursor: 'pointer'\n            },\n            onClick: () => handleNodeSelection(node),\n            children: node.name\n          }, node.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: \"1000\",\n        height: \"700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f9f9f9',\n        border: '1px solid #ddd',\n        borderRadius: '10px',\n        padding: '15px',\n        boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n        width: '300px',\n        margin: '10px',\n        overflowY: 'auto'\n      },\n      children: selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uC800\\uC790 \\uC815\\uBCF4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 16\n          }, this), \" \", selectedNode.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cluster ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 16\n          }, this), \" \", selectedNode.cluster_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC791\\uC131\\uD55C \\uB17C\\uBB38\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Array.from(new Set(\n          // 중복 방지\n          ((visibleData === null || visibleData === void 0 ? void 0 : visibleData.links) || []).filter(link => link.source.id === selectedNode.id || link.target.id === selectedNode.id).flatMap(link => link.papers || []))).map((paper, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              fontSize: '13px'\n            },\n            children: paper\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: '15px'\n          },\n          children: \"\\uD611\\uC5C5 \\uAD00\\uACC4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_selectedNode$collabo = selectedNode.collaborations) === null || _selectedNode$collabo === void 0 ? void 0 : _selectedNode$collabo.map((link, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              cursor: 'pointer',\n              color: '#007bff',\n              backgroundColor: 'transparent',\n              padding: '4px 8px',\n              borderRadius: '4px',\n              transition: 'background-color 0.2s ease'\n            },\n            onClick: () => handleNodeSelection(link.other),\n            onMouseEnter: e => e.currentTarget.style.backgroundColor = '#e0f0ff',\n            onMouseLeave: e => e.currentTarget.style.backgroundColor = 'transparent',\n            children: [link.other.name || link.other.id, \" (\\uACF5\\uB3D9 \\uB17C\\uBB38 \\uC218: \", link.value, \")\"]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorPage, \"AHORP3UhAfSxROHfiomWtc1SNYM=\");\n_c = AuthorPage;\nexport default AuthorPage;\nvar _c;\n$RefreshReg$(_c, \"AuthorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","AuthorPage","_s","_selectedNode$collabo","svgRef","allData","setAllData","visibleData","setVisibleData","searchKeyword","setSearchKeyword","suggestions","setSuggestions","selectedNode","setSelectedNode","simulationRef","externalClusterMap","setExternalClusterMap","fetch","then","res","json","data","setAllPapers","nodes","catch","err","console","error","getAuthorPapers","authorName","allPapers","filter","paper","authors","JSON","parse","_paper$authors","split","includes","Promise","all","graphData","externalMap","map","d","name","id","nodeById","Map","links","source","get","target","value","weight","papers","handleInputChange","e","keyword","Array","isArray","matched","n","toLowerCase","slice","handleSearch","matchedNode","find","handleNodeSelection","alert","handleKeyDown","key","node","mainClusterId","cluster_id","clusterNodes","clusterGraph","link","set","concat","bfsQueue","visited","Set","bfsClusterIds","length","current","shift","neighbors","neighbor","has","add","push","sameClusterNodes","nodeIdsInCluster","neighborScores","_externalClusterMap$m","_externalClusterMap$m2","sourceId","targetId","sourceCluster","targetCluster","srcInMain","tgtInMain","some","c","extraNodesFromCluster","entries","sort","a","b","visualizedIds","directlyConnected","bfsDirectNeighbors","finalNodes","finalLinks","collaborations","l","other","zoomInToNode","svg","select","width","height","x","y","stop","scale","transform","zoomIdentity","translate","zoom","on","event","attr","call","transition","duration","selectAll","remove","svgGroup","append","allClusters","color","scaleOrdinal","schemeCategory10","domain","simulation","forceSimulation","force","forceLink","distance","forceManyBody","strength","forceCenter","forceCollide","join","Math","sqrt","nodeGroup","drag","style","text","substring","active","alphaTarget","restart","fx","fy","display","children","flex","position","top","left","zIndex","background","padding","borderRadius","boxShadow","gap","alignItems","type","onChange","onKeyDown","placeholder","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","cursor","listStyle","margin","maxHeight","overflowY","ref","from","flatMap","idx","fontSize","marginTop","i","onMouseEnter","currentTarget","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/AuthorPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction AuthorPage() {\r\n  const svgRef = useRef();\r\n  const [allData, setAllData] = useState(null);\r\n  const [visibleData, setVisibleData] = useState(null);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const simulationRef = useRef(null);\r\n  const [externalClusterMap, setExternalClusterMap] = useState({});\r\n  useEffect(() => {\r\n    fetch('citation_graph_with_cluster_v3.json')\r\n      .then(res => res.json())\r\n      .then(data => setAllPapers(data.nodes || []))\r\n      .catch(err => console.error('논문 데이터 로딩 실패:', err));\r\n  }, []);\r\n\r\n  const getAuthorPapers = (authorName) => {\r\n    return allPapers.filter(paper => {\r\n      let authors = [];\r\n      try {\r\n        authors = JSON.parse(paper.authors);\r\n      } catch {\r\n        authors = paper.authors?.split(/,\\s*/) || [];\r\n      }\r\n      return authors.includes(authorName);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      fetch('/coauthorship_graph_with_year_cluster.json').then(res => res.json()),\r\n      fetch('/external_cluster_links.json').then(res => res.json())\r\n    ]).then(([graphData, externalMap]) => {\r\n      const nodes = graphData.nodes.map(d => ({ ...d, name: d.id || '' }));\r\n      const nodeById = new Map(nodes.map(d => [d.id, d]));\r\n      const links = graphData.links.map(d => ({\r\n        source: nodeById.get(d.source),\r\n        target: nodeById.get(d.target),\r\n        value: d.weight,\r\n        papers: d.papers\r\n      }));\r\n      setAllData({ nodes, links, nodeById });\r\n      setExternalClusterMap(externalMap);\r\n    });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const keyword = e.target.value;\r\n    setSearchKeyword(keyword);\r\n    if (!keyword || !allData || !Array.isArray(allData.nodes)) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n    const matched = allData.nodes\r\n      .filter(n => typeof n.name === 'string' && n.name.toLowerCase().includes(keyword.toLowerCase()))\r\n      .slice(0, 10);\r\n    setSuggestions(matched);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (!allData) return;\r\n    const matchedNode = allData.nodes.find(n => typeof n.name === 'string' && n.name.toLowerCase() === searchKeyword.toLowerCase());\r\n    if (matchedNode) {\r\n      handleNodeSelection(matchedNode);\r\n    } else {\r\n      alert('해당 저자를 찾을 수 없습니다.');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleNodeSelection = (node) => {\r\n    const mainClusterId = node.cluster_id;\r\n    const clusterNodes = allData.nodes.filter(n => n.cluster_id === mainClusterId);\r\n    const clusterGraph = new Map();\r\n    for (const link of allData.links) {\r\n      if (link.source.cluster_id === mainClusterId && link.target.cluster_id === mainClusterId) {\r\n        clusterGraph.set(link.source.id, (clusterGraph.get(link.source.id) || []).concat(link.target.id));\r\n        clusterGraph.set(link.target.id, (clusterGraph.get(link.target.id) || []).concat(link.source.id));\r\n      }\r\n    }\r\n    const bfsQueue = [node.id];\r\n    const visited = new Set([node.id]);\r\n    const bfsClusterIds = [node.id];\r\n    while (bfsQueue.length > 0 && bfsClusterIds.length < 10) {\r\n      const current = bfsQueue.shift();\r\n      const neighbors = clusterGraph.get(current) || [];\r\n      for (const neighbor of neighbors) {\r\n        if (!visited.has(neighbor)) {\r\n          visited.add(neighbor);\r\n          bfsQueue.push(neighbor);\r\n          bfsClusterIds.push(neighbor);\r\n          if (bfsClusterIds.length >= 10) break;\r\n        }\r\n      }\r\n    }\r\n    const sameClusterNodes = bfsClusterIds.map(id => allData.nodeById.get(id));\r\n    const nodeIdsInCluster = new Set(sameClusterNodes.map(n => n.id));\r\n\r\n    const neighborScores = new Map();\r\n    for (const link of allData.links) {\r\n      const sourceId = link.source.id;\r\n      const targetId = link.target.id;\r\n      const sourceCluster = link.source.cluster_id;\r\n      const targetCluster = link.target.cluster_id;\r\n      const value = link.value;\r\n      const srcInMain = nodeIdsInCluster.has(sourceId);\r\n      const tgtInMain = nodeIdsInCluster.has(targetId);\r\n      if (srcInMain && !tgtInMain && externalClusterMap[mainClusterId]?.some(c => c.cluster_id === targetCluster)) {\r\n        neighborScores.set(targetId, (neighborScores.get(targetId) || 0) + value);\r\n      } else if (!srcInMain && tgtInMain && externalClusterMap[mainClusterId]?.some(c => c.cluster_id === sourceCluster)) {\r\n        neighborScores.set(sourceId, (neighborScores.get(sourceId) || 0) + value);\r\n      }\r\n    }\r\n\r\n    const extraNodesFromCluster = [...neighborScores.entries()]\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 10)\r\n      .map(([id]) => allData.nodeById.get(id));\r\n\r\n    const visualizedIds = new Set([...sameClusterNodes, ...extraNodesFromCluster].map(n => n.id));\r\n    const directlyConnected = allData.links.filter(link =>\r\n      (link.source.id === node.id && !visualizedIds.has(link.target.id)) ||\r\n      (link.target.id === node.id && !visualizedIds.has(link.source.id))\r\n    );\r\n    const bfsDirectNeighbors = directlyConnected\r\n      .map(link => link.source.id === node.id ? link.target.id : link.source.id)\r\n      .slice(0, 10)\r\n      .map(id => allData.nodeById.get(id));\r\n\r\n    const finalNodes = [...sameClusterNodes, ...extraNodesFromCluster, ...bfsDirectNeighbors];\r\n    const nodeById = new Map(finalNodes.map(n => [n.id, n]));\r\n    const finalLinks = allData.links\r\n      .filter(link => nodeById.has(link.source.id) && nodeById.has(link.target.id))\r\n      .map(link => ({\r\n        source: nodeById.get(link.source.id),\r\n        target: nodeById.get(link.target.id),\r\n        value: link.value,\r\n        papers: link.papers\r\n      }));\r\n\r\n    const collaborations = finalLinks\r\n      .filter(l => l.source.id === node.id || l.target.id === node.id)\r\n      .map(link => ({\r\n        ...link,\r\n        other: link.source.id === node.id ? link.target : link.source\r\n      }));\r\n\r\n    setVisibleData({ nodes: finalNodes, links: finalLinks });\r\n    setSuggestions([]);\r\n    setSearchKeyword(node.name);\r\n    setSelectedNode({ ...node, collaborations });\r\n  };\r\n\r\n  const zoomInToNode = (node) => {\r\n    const svg = d3.select(svgRef.current);\r\n    const width = 1000, height = 700;\r\n    if (!node || node.x == null || node.y == null) return;\r\n    if (simulationRef.current) simulationRef.current.stop();\r\n\r\n    const scale = 1.5;\r\n    const transform = d3.zoomIdentity\r\n      .translate(width / 2 - node.x * scale, height / 2 - node.y * scale)\r\n      .scale(scale);\r\n\r\n    const zoom = d3.zoom().on('zoom', (event) => {\r\n      svg.select('g').attr('transform', event.transform);\r\n    });\r\n    svg.call(zoom);\r\n    svg.transition().duration(750).call(zoom.transform, transform);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!visibleData) return;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const width = 1000;\r\n    const height = 700;\r\n    svg.attr('viewBox', [0, 0, width, height]);\r\n    const svgGroup = svg.append('g');\r\n\r\n    const allClusters = [...new Set(visibleData.nodes.map(d => d.cluster_id))];\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10).domain(allClusters);\r\n\r\n    const simulation = d3.forceSimulation(visibleData.nodes)\r\n      .force('link', d3.forceLink(visibleData.links).id(d => d.id).distance(100))\r\n      .force('charge', d3.forceManyBody().strength(-150))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('collision', d3.forceCollide(25));\r\n    simulationRef.current = simulation;\r\n\r\n    const link = svgGroup.append('g')\r\n      .attr('stroke', '#aaa')\r\n      .attr('stroke-opacity', 0.3)\r\n      .selectAll('line')\r\n      .data(visibleData.links)\r\n      .join('line')\r\n      .attr('stroke-width', d => Math.sqrt(d.value));\r\n\r\n    const nodeGroup = svgGroup.append('g')\r\n      .selectAll('g')\r\n      .data(visibleData.nodes)\r\n      .join('g')\r\n      .call(drag(simulation))\r\n      .on('click', (event, d) => {\r\n        handleNodeSelection(d);\r\n      });\r\n\r\n    nodeGroup.append('circle')\r\n      .attr('r', d => selectedNode && d.id === selectedNode.id ? 15 : 10)\r\n      .attr('fill', d => color(d.cluster_id))\r\n      .attr('stroke', d => selectedNode && d.id === selectedNode.id ? 'red' : '#fff')\r\n      .attr('stroke-width', d => selectedNode && d.id === selectedNode.id ? 3 : 1)\r\n      .style('cursor', 'pointer');\r\n\r\n    nodeGroup.append('text')\r\n      .text(d => typeof d.name === 'string' && d.name.length > 25 ? d.name.substring(0, 25) + \"...\" : d.name)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', -15)\r\n      .style('font-size', '10px')\r\n      .style('cursor', 'pointer');\r\n\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n      nodeGroup.attr('transform', d => `translate(${d.x},${d.y})`);\r\n    });\r\n\r\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\r\n      svgGroup.attr(\"transform\", event.transform);\r\n    });\r\n    svg.call(zoom);\r\n\r\n    function drag(simulation) {\r\n      return d3.drag()\r\n        .on(\"start\", (event, d) => {\r\n          if (!event.active) simulation.alphaTarget(0.3).restart();\r\n          d.fx = d.x;\r\n          d.fy = d.y;\r\n        })\r\n        .on(\"drag\", (event, d) => {\r\n          d.fx = event.x;\r\n          d.fy = event.y;\r\n        })\r\n        .on(\"end\", (event, d) => {\r\n          if (!event.active) simulation.alphaTarget(0);\r\n          d.fx = null;\r\n          d.fy = null;\r\n        });\r\n    }\r\n  }, [visibleData]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <div style={{ flex: 1, position: 'relative' }}>\r\n        <div style={{ position: 'absolute', top: '50px', left: '50%', transform: 'translateX(-50%)', zIndex: 10, background: '#fff', padding: '10px', borderRadius: '8px', boxShadow: '0 2px 10px rgba(0,0,0,0.1)', display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={searchKeyword}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"저자 이름 검색\"\r\n            style={{ width: '300px', padding: '8px 12px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n          />\r\n          <button onClick={handleSearch} style={{ padding: '8px 16px', borderRadius: '5px', border: 'none', backgroundColor: '#007bff', color: '#fff', cursor: 'pointer' }}>Search</button>\r\n          {suggestions.length > 0 && (\r\n            <ul style={{ position: 'absolute', top: '50px', background: '#fff', border: '1px solid #ddd', listStyle: 'none', padding: '5px', margin: 0, width: '300px', zIndex: 20, maxHeight: '200px', overflowY: 'auto', borderRadius: '5px', boxShadow: '0 2px 5px rgba(0,0,0,0.15)' }}>\r\n              {suggestions.map(node => (\r\n                <li key={node.id} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleNodeSelection(node)}>\r\n                  {node.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <svg ref={svgRef} width=\"1000\" height=\"700\" />\r\n      </div>\r\n      <div style={{ background: '#f9f9f9', border: '1px solid #ddd', borderRadius: '10px', padding: '15px', boxShadow: '0 2px 5px rgba(0,0,0,0.1)', width: '300px', margin: '10px', overflowY: 'auto' }}>\r\n        {selectedNode && (\r\n          <div>\r\n            <h3>저자 정보</h3>\r\n            <p><strong>ID:</strong> {selectedNode.id}</p>\r\n            <p><strong>Cluster ID:</strong> {selectedNode.cluster_id}</p>\r\n\r\n            <h4>작성한 논문</h4>\r\n            <ul>\r\n              {Array.from(new Set( // 중복 방지\r\n                (visibleData?.links || [])\r\n                  .filter(link => link.source.id === selectedNode.id || link.target.id === selectedNode.id)\r\n                  .flatMap(link => link.papers || [])\r\n              )).map((paper, idx) => (\r\n                <li key={idx} style={{ fontSize: '13px' }}>{paper}</li>\r\n              ))}\r\n            </ul>\r\n\r\n            <h4 style={{ marginTop: '15px' }}>협업 관계</h4>\r\n            <ul>\r\n              {selectedNode.collaborations?.map((link, i) => (\r\n                <li\r\n                  key={i}\r\n                  style={{\r\n                    cursor: 'pointer',\r\n                    color: '#007bff',\r\n                    backgroundColor: 'transparent',\r\n                    padding: '4px 8px',\r\n                    borderRadius: '4px',\r\n                    transition: 'background-color 0.2s ease'\r\n                  }}\r\n                  onClick={() => handleNodeSelection(link.other)}\r\n                  onMouseEnter={(e) => e.currentTarget.style.backgroundColor = '#e0f0ff'}\r\n                  onMouseLeave={(e) => e.currentTarget.style.backgroundColor = 'transparent'}\r\n                >\r\n                  {link.other.name || link.other.id} (공동 논문 수: {link.value})\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}