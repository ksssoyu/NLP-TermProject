{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\AuthorYearPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthorPage() {\n  _s();\n  var _selectedNode$collabo;\n  const svgRef = useRef();\n  const [allData, setAllData] = useState(null);\n  const [visibleData, setVisibleData] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [highlightedClusterId, setHighlightedClusterId] = useState(null);\n  const simulationRef = useRef(null);\n  const [externalClusterMap, setExternalClusterMap] = useState({});\n  useEffect(() => {\n    Promise.all([fetch('/coauthorship_graph_with_year_cluster.json').then(res => res.json()), fetch('/external_cluster_links.json').then(res => res.json())]).then(([graphData, externalMap]) => {\n      const nodes = graphData.nodes.map(d => ({\n        ...d,\n        name: d.id || ''\n      }));\n      const nodeById = new Map(nodes.map(d => [d.id, d]));\n      const links = graphData.links.map(d => ({\n        source: nodeById.get(d.source),\n        target: nodeById.get(d.target),\n        value: d.weight,\n        papers: d.papers\n      }));\n      setAllData({\n        nodes,\n        links,\n        nodeById\n      });\n      setExternalClusterMap(externalMap);\n    });\n  }, []);\n  const handleInputChange = e => {\n    const keyword = e.target.value;\n    setSearchKeyword(keyword);\n    if (!keyword || !allData || !Array.isArray(allData.nodes)) {\n      setSuggestions([]);\n      return;\n    }\n    const matched = allData.nodes.filter(n => typeof n.name === 'string' && n.name.toLowerCase().includes(keyword.toLowerCase())).slice(0, 10);\n    setSuggestions(matched);\n  };\n  const handleSearch = () => {\n    if (!allData) return;\n    const matchedNode = allData.nodes.find(n => typeof n.name === 'string' && n.name.toLowerCase() === searchKeyword.toLowerCase());\n    if (matchedNode) {\n      handleNodeSelection(matchedNode);\n    } else {\n      alert('해당 저자를 찾을 수 없습니다.');\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const handleNodeSelection = node => {\n    const mainClusterId = node.cluster_id;\n    setHighlightedClusterId(mainClusterId);\n    const clusterNodes = allData.nodes.filter(n => n.cluster_id === mainClusterId);\n    const clusterGraph = new Map();\n    for (const link of allData.links) {\n      if (link.source.cluster_id === mainClusterId && link.target.cluster_id === mainClusterId) {\n        clusterGraph.set(link.source.id, (clusterGraph.get(link.source.id) || []).concat(link.target.id));\n        clusterGraph.set(link.target.id, (clusterGraph.get(link.target.id) || []).concat(link.source.id));\n      }\n    }\n    const bfsQueue = [node.id];\n    const visited = new Set([node.id]);\n    const bfsClusterIds = [node.id];\n    while (bfsQueue.length > 0 && bfsClusterIds.length < 10) {\n      const current = bfsQueue.shift();\n      const neighbors = clusterGraph.get(current) || [];\n      for (const neighbor of neighbors) {\n        if (!visited.has(neighbor)) {\n          visited.add(neighbor);\n          bfsQueue.push(neighbor);\n          bfsClusterIds.push(neighbor);\n          if (bfsClusterIds.length >= 10) break;\n        }\n      }\n    }\n    const sameClusterNodes = bfsClusterIds.map(id => allData.nodeById.get(id));\n    const nodeIdsInCluster = new Set(sameClusterNodes.map(n => n.id));\n    const neighborScores = new Map();\n    for (const link of allData.links) {\n      var _externalClusterMap$m, _externalClusterMap$m2;\n      const sourceId = link.source.id;\n      const targetId = link.target.id;\n      const sourceCluster = link.source.cluster_id;\n      const targetCluster = link.target.cluster_id;\n      const value = link.value;\n      const srcInMain = nodeIdsInCluster.has(sourceId);\n      const tgtInMain = nodeIdsInCluster.has(targetId);\n      if (srcInMain && !tgtInMain && (_externalClusterMap$m = externalClusterMap[mainClusterId]) !== null && _externalClusterMap$m !== void 0 && _externalClusterMap$m.some(c => c.cluster_id === targetCluster)) {\n        neighborScores.set(targetId, (neighborScores.get(targetId) || 0) + value);\n      } else if (!srcInMain && tgtInMain && (_externalClusterMap$m2 = externalClusterMap[mainClusterId]) !== null && _externalClusterMap$m2 !== void 0 && _externalClusterMap$m2.some(c => c.cluster_id === sourceCluster)) {\n        neighborScores.set(sourceId, (neighborScores.get(sourceId) || 0) + value);\n      }\n    }\n    const extraNodesFromCluster = [...neighborScores.entries()].sort((a, b) => b[1] - a[1]).slice(0, 10).map(([id]) => allData.nodeById.get(id));\n    const visualizedIds = new Set([...sameClusterNodes, ...extraNodesFromCluster].map(n => n.id));\n    const directlyConnected = allData.links.filter(link => link.source.id === node.id && !visualizedIds.has(link.target.id) || link.target.id === node.id && !visualizedIds.has(link.source.id));\n    const bfsDirectNeighbors = directlyConnected.map(link => link.source.id === node.id ? link.target.id : link.source.id).slice(0, 10).map(id => allData.nodeById.get(id));\n    const finalNodes = [...sameClusterNodes, ...extraNodesFromCluster, ...bfsDirectNeighbors];\n    const nodeById = new Map(finalNodes.map(n => [n.id, n]));\n    const finalLinks = allData.links.filter(link => nodeById.has(link.source.id) && nodeById.has(link.target.id)).map(link => ({\n      source: nodeById.get(link.source.id),\n      target: nodeById.get(link.target.id),\n      value: link.value,\n      papers: link.papers\n    }));\n    const collaborations = finalLinks.filter(l => l.source.id === node.id || l.target.id === node.id).map(link => ({\n      ...link,\n      other: link.source.id === node.id ? link.target : link.source\n    }));\n    setVisibleData({\n      nodes: finalNodes,\n      links: finalLinks\n    });\n    setSuggestions([]);\n    setSearchKeyword(node.name);\n    setSelectedNode({\n      ...node,\n      collaborations\n    });\n  };\n  useEffect(() => {\n    if (!visibleData) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 1000;\n    const height = 700;\n    svg.attr('viewBox', [0, 0, width, height]);\n    const svgGroup = svg.append('g');\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const simulation = d3.forceSimulation(visibleData.nodes).force('link', d3.forceLink(visibleData.links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-150)).force('center', d3.forceCenter(width / 2, height / 2)).force('collision', d3.forceCollide(25));\n    simulationRef.current = simulation;\n    const link = svgGroup.append('g').attr('stroke', '#aaa').attr('stroke-opacity', 0.3).selectAll('line').data(visibleData.links).join('line').attr('stroke-width', d => Math.sqrt(d.value));\n    const nodeGroup = svgGroup.append('g').selectAll('g').data(visibleData.nodes).join('g').call(d3.drag(simulation)).on('click', (event, d) => handleNodeSelection(d));\n    nodeGroup.append('circle').attr('r', d => d.id === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id) ? 15 : 10).attr('fill', d => color(d.cluster_id)).attr('stroke', d => d.cluster_id === highlightedClusterId ? 'red' : '#fff').attr('stroke-width', d => d.cluster_id === highlightedClusterId ? 3 : 1).style('cursor', 'pointer');\n    nodeGroup.append('text').text(d => typeof d.name === 'string' && d.name.length > 25 ? d.name.substring(0, 25) + '...' : d.name).attr('text-anchor', 'middle').attr('y', -15).style('font-size', '10px').style('cursor', 'pointer');\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      nodeGroup.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n    svg.call(d3.zoom().on(\"zoom\", event => {\n      svgGroup.attr(\"transform\", event.transform);\n    }));\n  }, [visibleData, highlightedClusterId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 10,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n          display: 'flex',\n          gap: '10px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchKeyword,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\uC800\\uC790 \\uC774\\uB984 \\uAC80\\uC0C9\",\n          style: {\n            width: '300px',\n            padding: '8px 12px',\n            borderRadius: '5px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          style: {\n            padding: '8px 16px',\n            borderRadius: '5px',\n            border: 'none',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            cursor: 'pointer'\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            position: 'absolute',\n            top: '50px',\n            background: '#fff',\n            border: '1px solid #ddd',\n            listStyle: 'none',\n            padding: '5px',\n            margin: 0,\n            width: '300px',\n            zIndex: 20,\n            maxHeight: '200px',\n            overflowY: 'auto',\n            borderRadius: '5px',\n            boxShadow: '0 2px 5px rgba(0,0,0,0.15)'\n          },\n          children: suggestions.map(node => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '5px',\n              cursor: 'pointer'\n            },\n            onClick: () => handleNodeSelection(node),\n            children: node.name\n          }, node.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: \"1000\",\n        height: \"700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        padding: '20px',\n        backgroundColor: '#f9f9f9',\n        borderLeft: '1px solid #ccc',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC800\\uC790 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 14\n        }, this), \" \", selectedNode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cluster ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 14\n        }, this), \" \", selectedNode.cluster_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD611\\uC5C5 \\uAD00\\uACC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_selectedNode$collabo = selectedNode.collaborations) === null || _selectedNode$collabo === void 0 ? void 0 : _selectedNode$collabo.map((link, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            cursor: 'pointer',\n            color: '#007bff'\n          },\n          onClick: () => handleNodeSelection(link.other),\n          children: [link.other.name || link.other.id, \" (\\uACF5\\uB3D9 \\uB17C\\uBB38 \\uC218: \", link.value, \")\"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthorPage, \"KxybbA2kPox2UVoTIGJQOuqraSQ=\");\n_c = AuthorPage;\nexport default AuthorPage;\nvar _c;\n$RefreshReg$(_c, \"AuthorPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","AuthorPage","_s","_selectedNode$collabo","svgRef","allData","setAllData","visibleData","setVisibleData","searchKeyword","setSearchKeyword","suggestions","setSuggestions","selectedNode","setSelectedNode","highlightedClusterId","setHighlightedClusterId","simulationRef","externalClusterMap","setExternalClusterMap","Promise","all","fetch","then","res","json","graphData","externalMap","nodes","map","d","name","id","nodeById","Map","links","source","get","target","value","weight","papers","handleInputChange","e","keyword","Array","isArray","matched","filter","n","toLowerCase","includes","slice","handleSearch","matchedNode","find","handleNodeSelection","alert","handleKeyDown","key","node","mainClusterId","cluster_id","clusterNodes","clusterGraph","link","set","concat","bfsQueue","visited","Set","bfsClusterIds","length","current","shift","neighbors","neighbor","has","add","push","sameClusterNodes","nodeIdsInCluster","neighborScores","_externalClusterMap$m","_externalClusterMap$m2","sourceId","targetId","sourceCluster","targetCluster","srcInMain","tgtInMain","some","c","extraNodesFromCluster","entries","sort","a","b","visualizedIds","directlyConnected","bfsDirectNeighbors","finalNodes","finalLinks","collaborations","l","other","svg","select","selectAll","remove","width","height","attr","svgGroup","append","color","scaleOrdinal","schemeCategory10","simulation","forceSimulation","force","forceLink","distance","forceManyBody","strength","forceCenter","forceCollide","data","join","Math","sqrt","nodeGroup","call","drag","on","event","style","text","substring","x","y","zoom","transform","display","children","flex","position","top","left","zIndex","background","padding","borderRadius","boxShadow","gap","alignItems","type","onChange","onKeyDown","placeholder","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","cursor","listStyle","margin","maxHeight","overflowY","ref","borderLeft","i","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/AuthorYearPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction AuthorPage() {\r\n  const svgRef = useRef();\r\n  const [allData, setAllData] = useState(null);\r\n  const [visibleData, setVisibleData] = useState(null);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [highlightedClusterId, setHighlightedClusterId] = useState(null);\r\n  const simulationRef = useRef(null);\r\n  const [externalClusterMap, setExternalClusterMap] = useState({});\r\n\r\n  useEffect(() => {\r\n    Promise.all([\r\n      fetch('/coauthorship_graph_with_year_cluster.json').then(res => res.json()),\r\n      fetch('/external_cluster_links.json').then(res => res.json())\r\n    ]).then(([graphData, externalMap]) => {\r\n      const nodes = graphData.nodes.map(d => ({ ...d, name: d.id || '' }));\r\n      const nodeById = new Map(nodes.map(d => [d.id, d]));\r\n      const links = graphData.links.map(d => ({\r\n        source: nodeById.get(d.source),\r\n        target: nodeById.get(d.target),\r\n        value: d.weight,\r\n        papers: d.papers\r\n      }));\r\n      setAllData({ nodes, links, nodeById });\r\n      setExternalClusterMap(externalMap);\r\n    });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const keyword = e.target.value;\r\n    setSearchKeyword(keyword);\r\n    if (!keyword || !allData || !Array.isArray(allData.nodes)) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n    const matched = allData.nodes\r\n      .filter(n => typeof n.name === 'string' && n.name.toLowerCase().includes(keyword.toLowerCase()))\r\n      .slice(0, 10);\r\n    setSuggestions(matched);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (!allData) return;\r\n    const matchedNode = allData.nodes.find(n => typeof n.name === 'string' && n.name.toLowerCase() === searchKeyword.toLowerCase());\r\n    if (matchedNode) {\r\n      handleNodeSelection(matchedNode);\r\n    } else {\r\n      alert('해당 저자를 찾을 수 없습니다.');\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  const handleNodeSelection = (node) => {\r\n    const mainClusterId = node.cluster_id;\r\n    setHighlightedClusterId(mainClusterId);\r\n\r\n    const clusterNodes = allData.nodes.filter(n => n.cluster_id === mainClusterId);\r\n    const clusterGraph = new Map();\r\n    for (const link of allData.links) {\r\n      if (link.source.cluster_id === mainClusterId && link.target.cluster_id === mainClusterId) {\r\n        clusterGraph.set(link.source.id, (clusterGraph.get(link.source.id) || []).concat(link.target.id));\r\n        clusterGraph.set(link.target.id, (clusterGraph.get(link.target.id) || []).concat(link.source.id));\r\n      }\r\n    }\r\n    const bfsQueue = [node.id];\r\n    const visited = new Set([node.id]);\r\n    const bfsClusterIds = [node.id];\r\n    while (bfsQueue.length > 0 && bfsClusterIds.length < 10) {\r\n      const current = bfsQueue.shift();\r\n      const neighbors = clusterGraph.get(current) || [];\r\n      for (const neighbor of neighbors) {\r\n        if (!visited.has(neighbor)) {\r\n          visited.add(neighbor);\r\n          bfsQueue.push(neighbor);\r\n          bfsClusterIds.push(neighbor);\r\n          if (bfsClusterIds.length >= 10) break;\r\n        }\r\n      }\r\n    }\r\n    const sameClusterNodes = bfsClusterIds.map(id => allData.nodeById.get(id));\r\n    const nodeIdsInCluster = new Set(sameClusterNodes.map(n => n.id));\r\n\r\n    const neighborScores = new Map();\r\n    for (const link of allData.links) {\r\n      const sourceId = link.source.id;\r\n      const targetId = link.target.id;\r\n      const sourceCluster = link.source.cluster_id;\r\n      const targetCluster = link.target.cluster_id;\r\n      const value = link.value;\r\n      const srcInMain = nodeIdsInCluster.has(sourceId);\r\n      const tgtInMain = nodeIdsInCluster.has(targetId);\r\n      if (srcInMain && !tgtInMain && externalClusterMap[mainClusterId]?.some(c => c.cluster_id === targetCluster)) {\r\n        neighborScores.set(targetId, (neighborScores.get(targetId) || 0) + value);\r\n      } else if (!srcInMain && tgtInMain && externalClusterMap[mainClusterId]?.some(c => c.cluster_id === sourceCluster)) {\r\n        neighborScores.set(sourceId, (neighborScores.get(sourceId) || 0) + value);\r\n      }\r\n    }\r\n\r\n    const extraNodesFromCluster = [...neighborScores.entries()]\r\n      .sort((a, b) => b[1] - a[1])\r\n      .slice(0, 10)\r\n      .map(([id]) => allData.nodeById.get(id));\r\n\r\n    const visualizedIds = new Set([...sameClusterNodes, ...extraNodesFromCluster].map(n => n.id));\r\n    const directlyConnected = allData.links.filter(link =>\r\n      (link.source.id === node.id && !visualizedIds.has(link.target.id)) ||\r\n      (link.target.id === node.id && !visualizedIds.has(link.source.id))\r\n    );\r\n    const bfsDirectNeighbors = directlyConnected\r\n      .map(link => link.source.id === node.id ? link.target.id : link.source.id)\r\n      .slice(0, 10)\r\n      .map(id => allData.nodeById.get(id));\r\n\r\n    const finalNodes = [...sameClusterNodes, ...extraNodesFromCluster, ...bfsDirectNeighbors];\r\n    const nodeById = new Map(finalNodes.map(n => [n.id, n]));\r\n    const finalLinks = allData.links\r\n      .filter(link => nodeById.has(link.source.id) && nodeById.has(link.target.id))\r\n      .map(link => ({\r\n        source: nodeById.get(link.source.id),\r\n        target: nodeById.get(link.target.id),\r\n        value: link.value,\r\n        papers: link.papers\r\n      }));\r\n\r\n    const collaborations = finalLinks\r\n      .filter(l => l.source.id === node.id || l.target.id === node.id)\r\n      .map(link => ({\r\n        ...link,\r\n        other: link.source.id === node.id ? link.target : link.source\r\n      }));\r\n\r\n    setVisibleData({ nodes: finalNodes, links: finalLinks });\r\n    setSuggestions([]);\r\n    setSearchKeyword(node.name);\r\n    setSelectedNode({ ...node, collaborations });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!visibleData) return;\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n    const width = 1000;\r\n    const height = 700;\r\n    svg.attr('viewBox', [0, 0, width, height]);\r\n    const svgGroup = svg.append('g');\r\n\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    const simulation = d3.forceSimulation(visibleData.nodes)\r\n      .force('link', d3.forceLink(visibleData.links).id(d => d.id).distance(100))\r\n      .force('charge', d3.forceManyBody().strength(-150))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('collision', d3.forceCollide(25));\r\n    simulationRef.current = simulation;\r\n\r\n    const link = svgGroup.append('g')\r\n      .attr('stroke', '#aaa')\r\n      .attr('stroke-opacity', 0.3)\r\n      .selectAll('line')\r\n      .data(visibleData.links)\r\n      .join('line')\r\n      .attr('stroke-width', d => Math.sqrt(d.value));\r\n\r\n    const nodeGroup = svgGroup.append('g')\r\n      .selectAll('g')\r\n      .data(visibleData.nodes)\r\n      .join('g')\r\n      .call(d3.drag(simulation))\r\n      .on('click', (event, d) => handleNodeSelection(d));\r\n\r\n    nodeGroup.append('circle')\r\n      .attr('r', d => d.id === selectedNode?.id ? 15 : 10)\r\n      .attr('fill', d => color(d.cluster_id))\r\n      .attr('stroke', d => d.cluster_id === highlightedClusterId ? 'red' : '#fff')\r\n      .attr('stroke-width', d => d.cluster_id === highlightedClusterId ? 3 : 1)\r\n      .style('cursor', 'pointer');\r\n\r\n    nodeGroup.append('text')\r\n      .text(d => typeof d.name === 'string' && d.name.length > 25 ? d.name.substring(0, 25) + '...' : d.name)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', -15)\r\n      .style('font-size', '10px')\r\n      .style('cursor', 'pointer');\r\n\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n      nodeGroup.attr('transform', d => `translate(${d.x},${d.y})`);\r\n    });\r\n\r\n    svg.call(d3.zoom().on(\"zoom\", (event) => {\r\n      svgGroup.attr(\"transform\", event.transform);\r\n    }));\r\n  }, [visibleData, highlightedClusterId]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <div style={{ flex: 1, position: 'relative' }}>\r\n        <div style={{ position: 'absolute', top: '50px', left: '50%', transform: 'translateX(-50%)', zIndex: 10, background: '#fff', padding: '10px', borderRadius: '8px', boxShadow: '0 2px 10px rgba(0,0,0,0.1)', display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={searchKeyword}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"저자 이름 검색\"\r\n            style={{ width: '300px', padding: '8px 12px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n          />\r\n          <button onClick={handleSearch} style={{ padding: '8px 16px', borderRadius: '5px', border: 'none', backgroundColor: '#007bff', color: '#fff', cursor: 'pointer' }}>Search</button>\r\n          {suggestions.length > 0 && (\r\n            <ul style={{ position: 'absolute', top: '50px', background: '#fff', border: '1px solid #ddd', listStyle: 'none', padding: '5px', margin: 0, width: '300px', zIndex: 20, maxHeight: '200px', overflowY: 'auto', borderRadius: '5px', boxShadow: '0 2px 5px rgba(0,0,0,0.15)' }}>\r\n              {suggestions.map(node => (\r\n                <li key={node.id} style={{ padding: '5px', cursor: 'pointer' }} onClick={() => handleNodeSelection(node)}>\r\n                  {node.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n        <svg ref={svgRef} width=\"1000\" height=\"700\" />\r\n      </div>\r\n      {selectedNode && (\r\n        <div style={{ width: '300px', padding: '20px', backgroundColor: '#f9f9f9', borderLeft: '1px solid #ccc', overflowY: 'auto' }}>\r\n          <h3>저자 정보</h3>\r\n          <p><strong>ID:</strong> {selectedNode.id}</p>\r\n          <p><strong>Cluster ID:</strong> {selectedNode.cluster_id}</p>\r\n          <h4>협업 관계</h4>\r\n          <ul>\r\n            {selectedNode.collaborations?.map((link, i) => (\r\n              <li key={i} style={{ cursor: 'pointer', color: '#007bff' }}\r\n                  onClick={() => handleNodeSelection(link.other)}>\r\n                {link.other.name || link.other.id} (공동 논문 수: {link.value})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthorPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}