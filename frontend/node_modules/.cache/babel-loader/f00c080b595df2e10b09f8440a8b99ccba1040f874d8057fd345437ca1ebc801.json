{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksoyu\\\\Downloads\\\\nlp\\\\frontend\\\\src\\\\pages\\\\CitationYearPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CitationYearPage() {\n  _s();\n  var _currentData$cluster_;\n  const svgRef = useRef();\n  const [allYearData, setAllYearData] = useState({});\n  const [selectedYear, setSelectedYear] = useState('2015-2017');\n  const [currentData, setCurrentData] = useState(null);\n  const [selectedCluster, setSelectedCluster] = useState(null);\n  const [selectedPaper, setSelectedPaper] = useState(null);\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [citationData, setCitationData] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const availableYears = [{\n    label: '2015-2017',\n    file: 'cluster_2015_2017.json'\n  }, {\n    label: '2016-2018',\n    file: 'cluster_2016_2018.json'\n  }, {\n    label: '2017-2019',\n    file: 'cluster_2017_2019.json'\n  }, {\n    label: '2018-2020',\n    file: 'cluster_2018_2020.json'\n  }, {\n    label: '2019-2021',\n    file: 'cluster_2019_2021.json'\n  }, {\n    label: '2020-2022',\n    file: 'cluster_2020_2022.json'\n  }, {\n    label: '2021-2023',\n    file: 'cluster_2021_2023.json'\n  }, {\n    label: '2022-2024',\n    file: 'cluster_2022_2024.json'\n  }];\n  useEffect(() => {\n    // citation_graph_with_cluster_v2.json 파일 로드\n    fetch('/citation_graph_with_cluster_v2.json').then(res => res.json()).then(json => setCitationData(json)).catch(err => console.error('Failed to load citation data:', err));\n\n    // 모든 연도별 JSON 파일을 로드\n    Promise.all(availableYears.map(year => fetch(`/cluster_with_keywords_by_year/${year.file}`).then(res => res.json()).catch(err => {\n      console.error(`Failed to load ${year.file}:`, err);\n      return null;\n    }))).then(dataArray => {\n      const yearDataMap = {};\n      availableYears.forEach((year, idx) => {\n        if (dataArray[idx]) {\n          yearDataMap[year.label] = dataArray[idx];\n        }\n      });\n      setAllYearData(yearDataMap);\n\n      // 첫 번째 사용 가능한 데이터로 초기화\n      const firstAvailableYear = availableYears.find(year => yearDataMap[year.label]);\n      if (firstAvailableYear) {\n        setSelectedYear(firstAvailableYear.label);\n        setCurrentData(yearDataMap[firstAvailableYear.label]);\n      }\n    }).catch(err => {\n      console.error('Failed to load year data:', err);\n    });\n  }, []);\n  const handleYearChange = year => {\n    setSelectedYear(year);\n    setCurrentData(allYearData[year]);\n    setSelectedCluster(null);\n    setSelectedPaper(null);\n    setSearchKeyword('');\n    setSuggestions([]);\n    setErrorMessage('');\n  };\n  const handleInputChange = e => {\n    const keyword = e.target.value;\n    setSearchKeyword(keyword);\n    if (keyword.length < 2 || !currentData) {\n      setSuggestions([]);\n      return;\n    }\n    const matched = [];\n    Object.values(currentData.cluster_details).forEach(papers => {\n      papers.forEach(paper => {\n        if (paper.title.toLowerCase().includes(keyword.toLowerCase()) && matched.length < 10) {\n          matched.push(paper);\n        }\n      });\n    });\n    setSuggestions(matched);\n  };\n  const handleSuggestionClick = paper => {\n    setSelectedPaper(paper);\n    setSearchKeyword(paper.title);\n    setSuggestions([]);\n\n    // 해당 논문이 속한 클러스터 찾기\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\n      if (papers.some(p => p.id === paper.id)) {\n        setSelectedCluster(clusterId);\n      }\n    });\n    // 해당 논문 중심으로 zoom in\n    zoomInToNode(paper.id);\n  };\n  const handleSearch = () => {\n    if (!currentData) return;\n\n    // 논문 제목이 검색된 연도에 존재하는지 확인\n    let foundPaper = null;\n    let isPaperFoundInCurrentYear = false;\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\n      const match = papers.find(p => p.title.toLowerCase() === searchKeyword.toLowerCase());\n      if (match) {\n        foundPaper = match;\n        isPaperFoundInCurrentYear = true;\n      }\n    });\n    if (isPaperFoundInCurrentYear) {\n      handleSuggestionClick(foundPaper);\n    } else {\n      setErrorMessage('해당 연도에 존재하지 않는 논문입니다.');\n      setSelectedPaper(null);\n      setSelectedCluster(null);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  // zoomInToNode: 선택한 노드로 zoom in\n  const zoomInToNode = nodeId => {\n    const svg = d3.select(svgRef.current);\n    const node = svg.select(`#${nodeId}`);\n    if (node.empty()) return;\n    const bounds = node.node().getBBox();\n    const width = 1000;\n    const height = 700;\n    const svgGroup = svg.select(\"g\");\n    const scale = Math.min(width / bounds.width, height / bounds.height, 1.5);\n    const translate = [(width - bounds.width * scale) / 2 - bounds.x * scale, (height - bounds.height * scale) / 2 - bounds.y * scale];\n    svgGroup.transition().duration(750).attr(\"transform\", `translate(${translate})scale(${scale})`);\n  };\n  useEffect(() => {\n    if (!currentData) return;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll('*').remove();\n    const width = 1000;\n    const height = 700;\n    svg.attr('viewBox', [0, 0, width, height]);\n    const svgGroup = svg.append(\"g\");\n\n    // 클러스터 데이터를 노드와 링크로 변환\n    const nodes = [];\n    const links = [];\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\n      // 클러스터 중심 노드\n      const centerNode = {\n        id: `cluster_${clusterId}`,\n        name: `Cluster ${clusterId}`,\n        type: 'cluster',\n        clusterId: clusterId,\n        keywords: currentData.cluster_keywords[clusterId] || [],\n        paperCount: papers.length\n      };\n      nodes.push(centerNode);\n\n      // 논문 노드들\n      papers.forEach(paper => {\n        nodes.push({\n          id: paper.id,\n          name: paper.title,\n          type: 'paper',\n          clusterId: clusterId,\n          detail: paper\n        });\n\n        // 클러스터 중심과 논문을 연결\n        links.push({\n          source: `cluster_${clusterId}`,\n          target: paper.id\n        });\n      });\n    });\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink(links).id(d => d.id).distance(80)).force('charge', d3.forceManyBody().strength(d => d.type === 'cluster' ? -500 : -100)).force('center', d3.forceCenter(width / 2, height / 2)).force('collision', d3.forceCollide(d => d.type === 'cluster' ? 40 : 20));\n    const link = svgGroup.append('g').attr('stroke', '#aaa').attr('stroke-opacity', 0.3).selectAll('line').data(links).join('line').attr('stroke-width', 1);\n    const nodeGroup = svgGroup.append('g').selectAll('g').data(nodes).join('g').call(drag(simulation)).on(\"click\", (event, d) => {\n      if (d.type === 'cluster') {\n        setSelectedCluster(d.clusterId);\n        setSelectedPaper(null);\n      } else {\n        setSelectedPaper(d);\n        setSelectedCluster(d.clusterId);\n        zoomInToNode(d.id); // 클릭된 논문으로 zoom in\n      }\n    });\n    nodeGroup.append('circle').attr('r', d => {\n      if (d.type === 'cluster') return 25;\n      return selectedPaper && selectedPaper.id === d.id ? 12 : 8;\n    }).attr('fill', d => color(d.clusterId)).attr('stroke', d => {\n      if (d.type === 'cluster' && selectedCluster === d.clusterId) return 'red';\n      if (d.type === 'paper' && selectedPaper && selectedPaper.id === d.id) return 'red';\n      return '#fff';\n    }).attr('stroke-width', d => {\n      if (d.type === 'cluster' && selectedCluster === d.clusterId) return 3;\n      if (d.type === 'paper' && selectedPaper && selectedPaper.id === d.id) return 3;\n      return 1;\n    }).style('cursor', 'pointer');\n    nodeGroup.append('text').text(d => {\n      if (d.type === 'cluster') return `C${d.clusterId}`;\n      const title = d.name.length > 20 ? d.name.substring(0, 20) + \"...\" : d.name;\n      return title;\n    }).attr('text-anchor', 'middle').attr('y', d => d.type === 'cluster' ? 5 : -12).style('font-size', d => d.type === 'cluster' ? '14px' : '8px').style('font-weight', d => d.type === 'cluster' ? 'bold' : 'normal').style('cursor', 'pointer').style('fill', d => d.type === 'cluster' ? '#fff' : '#333');\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      nodeGroup.attr('transform', d => `translate(${d.x},${d.y})`);\n    });\n    const zoom = d3.zoom().on(\"zoom\", event => {\n      svgGroup.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n    function drag(simulation) {\n      function dragstarted(event, d) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n      function dragged(event, d) {\n        d.fx = event.x;\n        d.fy = event.y;\n      }\n      function dragended(event, d) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = null;\n        d.fy = null;\n      }\n      return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\n    }\n  }, [currentData, selectedCluster, selectedPaper]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '10px',\n          left: '20px',\n          zIndex: 10,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginRight: '10px',\n            fontWeight: 'bold'\n          },\n          children: \"\\uC5F0\\uB3C4 \\uC120\\uD0DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => handleYearChange(e.target.value),\n          style: {\n            padding: '5px',\n            borderRadius: '5px',\n            border: '1px solid #ccc'\n          },\n          children: availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year.label,\n            children: year.label\n          }, year.label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50px',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          zIndex: 10,\n          background: '#fff',\n          padding: '10px',\n          borderRadius: '8px',\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n          display: 'flex',\n          gap: '10px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchKeyword,\n          onChange: handleInputChange,\n          onKeyDown: handleKeyDown,\n          placeholder: \"\\uB17C\\uBB38 \\uC81C\\uBAA9 \\uAC80\\uC0C9\",\n          style: {\n            width: '300px',\n            padding: '8px 12px',\n            borderRadius: '5px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSearch,\n          style: {\n            padding: '8px 16px',\n            borderRadius: '5px',\n            border: 'none',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            cursor: 'pointer'\n          },\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red',\n            fontSize: '14px',\n            marginTop: '10px'\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            position: 'absolute',\n            top: '50px',\n            background: '#fff',\n            border: '1px solid #ddd',\n            listStyle: 'none',\n            padding: '5px',\n            margin: 0,\n            width: '300px',\n            zIndex: 20,\n            maxHeight: '200px',\n            overflowY: 'auto',\n            borderRadius: '5px',\n            boxShadow: '0 2px 5px rgba(0,0,0,0.15)'\n          },\n          children: suggestions.map(paper => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              padding: '5px',\n              cursor: 'pointer'\n            },\n            onClick: () => handleSuggestionClick(paper),\n            children: paper.title\n          }, paper.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        width: \"1000\",\n        height: \"700\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#f9f9f9',\n        border: '1px solid #ddd',\n        borderRadius: '10px',\n        padding: '15px',\n        boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n        width: '350px',\n        margin: '10px'\n      },\n      children: selectedPaper ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            fontSize: '20px'\n          },\n          children: selectedPaper.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD074\\uB7EC\\uC2A4\\uD130:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 16\n          }, this), \" \", selectedCluster]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD0A4\\uC6CC\\uB4DC:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: (_currentData$cluster_ = currentData.cluster_keywords[selectedCluster]) === null || _currentData$cluster_ === void 0 ? void 0 : _currentData$cluster_.map((keyword, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: keyword\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC0C1\\uC138 \\uC815\\uBCF4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(selectedPaper.detail, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB17C\\uBB38\\uC744 \\uD074\\uB9AD\\uD558\\uC5EC \\uC0C1\\uC138 \\uC815\\uBCF4\\uB97C \\uD655\\uC778\\uD558\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n}\n_s(CitationYearPage, \"5ZfdJtWRM37od9+fTTXXmkk6UA0=\");\n_c = CitationYearPage;\nexport default CitationYearPage;\nvar _c;\n$RefreshReg$(_c, \"CitationYearPage\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","CitationYearPage","_s","_currentData$cluster_","svgRef","allYearData","setAllYearData","selectedYear","setSelectedYear","currentData","setCurrentData","selectedCluster","setSelectedCluster","selectedPaper","setSelectedPaper","searchKeyword","setSearchKeyword","suggestions","setSuggestions","citationData","setCitationData","errorMessage","setErrorMessage","availableYears","label","file","fetch","then","res","json","catch","err","console","error","Promise","all","map","year","dataArray","yearDataMap","forEach","idx","firstAvailableYear","find","handleYearChange","handleInputChange","e","keyword","target","value","length","matched","Object","values","cluster_details","papers","paper","title","toLowerCase","includes","push","handleSuggestionClick","entries","clusterId","some","p","id","zoomInToNode","handleSearch","foundPaper","isPaperFoundInCurrentYear","match","handleKeyDown","key","nodeId","svg","select","current","node","empty","bounds","getBBox","width","height","svgGroup","scale","Math","min","translate","x","y","transition","duration","attr","selectAll","remove","append","nodes","links","centerNode","name","type","keywords","cluster_keywords","paperCount","detail","source","color","scaleOrdinal","schemeCategory10","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","link","data","join","nodeGroup","call","drag","on","event","style","text","substring","zoom","transform","dragstarted","active","alphaTarget","restart","fx","fy","dragged","dragended","display","children","flex","position","top","left","zIndex","background","padding","borderRadius","boxShadow","marginRight","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","border","gap","alignItems","onKeyDown","placeholder","onClick","backgroundColor","cursor","fontSize","marginTop","listStyle","margin","maxHeight","overflowY","ref","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/ksoyu/Downloads/nlp/frontend/src/pages/CitationYearPage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction CitationYearPage() {\r\n  const svgRef = useRef();\r\n  const [allYearData, setAllYearData] = useState({});\r\n  const [selectedYear, setSelectedYear] = useState('2015-2017');\r\n  const [currentData, setCurrentData] = useState(null);\r\n  const [selectedCluster, setSelectedCluster] = useState(null);\r\n  const [selectedPaper, setSelectedPaper] = useState(null);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [citationData, setCitationData] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const availableYears = [\r\n    { label: '2015-2017', file: 'cluster_2015_2017.json' },\r\n    { label: '2016-2018', file: 'cluster_2016_2018.json' },\r\n    { label: '2017-2019', file: 'cluster_2017_2019.json' },\r\n    { label: '2018-2020', file: 'cluster_2018_2020.json' },\r\n    { label: '2019-2021', file: 'cluster_2019_2021.json' },\r\n    { label: '2020-2022', file: 'cluster_2020_2022.json' },\r\n    { label: '2021-2023', file: 'cluster_2021_2023.json' },\r\n    { label: '2022-2024', file: 'cluster_2022_2024.json' }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // citation_graph_with_cluster_v2.json 파일 로드\r\n    fetch('/citation_graph_with_cluster_v2.json')\r\n      .then(res => res.json())\r\n      .then(json => setCitationData(json))\r\n      .catch(err => console.error('Failed to load citation data:', err));\r\n    \r\n    // 모든 연도별 JSON 파일을 로드\r\n    Promise.all(availableYears.map(year => \r\n      fetch(`/cluster_with_keywords_by_year/${year.file}`)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n          console.error(`Failed to load ${year.file}:`, err);\r\n          return null;\r\n        })\r\n    ))\r\n    .then(dataArray => {\r\n      const yearDataMap = {};\r\n      availableYears.forEach((year, idx) => {\r\n        if (dataArray[idx]) {\r\n          yearDataMap[year.label] = dataArray[idx];\r\n        }\r\n      });\r\n      setAllYearData(yearDataMap);\r\n      \r\n      // 첫 번째 사용 가능한 데이터로 초기화\r\n      const firstAvailableYear = availableYears.find(year => yearDataMap[year.label]);\r\n      if (firstAvailableYear) {\r\n        setSelectedYear(firstAvailableYear.label);\r\n        setCurrentData(yearDataMap[firstAvailableYear.label]);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('Failed to load year data:', err);\r\n    });\r\n  }, []);\r\n\r\n  const handleYearChange = (year) => {\r\n    setSelectedYear(year);\r\n    setCurrentData(allYearData[year]);\r\n    setSelectedCluster(null);\r\n    setSelectedPaper(null);\r\n    setSearchKeyword('');\r\n    setSuggestions([]);\r\n    setErrorMessage('');\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const keyword = e.target.value;\r\n    setSearchKeyword(keyword);\r\n\r\n    if (keyword.length < 2 || !currentData) {\r\n      setSuggestions([]);\r\n      return;\r\n    }\r\n\r\n    const matched = [];\r\n    Object.values(currentData.cluster_details).forEach(papers => {\r\n      papers.forEach(paper => {\r\n        if (paper.title.toLowerCase().includes(keyword.toLowerCase()) && matched.length < 10) {\r\n          matched.push(paper);\r\n        }\r\n      });\r\n    });\r\n    setSuggestions(matched);\r\n  };\r\n\r\n  const handleSuggestionClick = (paper) => {\r\n    setSelectedPaper(paper);\r\n    setSearchKeyword(paper.title);\r\n    setSuggestions([]);\r\n    \r\n    // 해당 논문이 속한 클러스터 찾기\r\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\r\n      if (papers.some(p => p.id === paper.id)) {\r\n        setSelectedCluster(clusterId);\r\n      }\r\n    });\r\n    // 해당 논문 중심으로 zoom in\r\n    zoomInToNode(paper.id);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (!currentData) return;\r\n\r\n    // 논문 제목이 검색된 연도에 존재하는지 확인\r\n    let foundPaper = null;\r\n    let isPaperFoundInCurrentYear = false;\r\n\r\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\r\n      const match = papers.find(p => p.title.toLowerCase() === searchKeyword.toLowerCase());\r\n      if (match) {\r\n        foundPaper = match;\r\n        isPaperFoundInCurrentYear = true;\r\n      }\r\n    });\r\n\r\n    if (isPaperFoundInCurrentYear) {\r\n      handleSuggestionClick(foundPaper);\r\n    } else {\r\n      setErrorMessage('해당 연도에 존재하지 않는 논문입니다.');\r\n      setSelectedPaper(null);\r\n      setSelectedCluster(null);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearch();\r\n    }\r\n  };\r\n\r\n  // zoomInToNode: 선택한 노드로 zoom in\r\n  const zoomInToNode = (nodeId) => {\r\n    const svg = d3.select(svgRef.current);\r\n    const node = svg.select(`#${nodeId}`);\r\n\r\n    if (node.empty()) return;\r\n\r\n    const bounds = node.node().getBBox();\r\n    const width = 1000;\r\n    const height = 700;\r\n    const svgGroup = svg.select(\"g\");\r\n\r\n    const scale = Math.min(width / bounds.width, height / bounds.height, 1.5);\r\n    const translate = [\r\n      (width - bounds.width * scale) / 2 - bounds.x * scale,\r\n      (height - bounds.height * scale) / 2 - bounds.y * scale\r\n    ];\r\n\r\n    svgGroup.transition().duration(750).attr(\"transform\", `translate(${translate})scale(${scale})`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!currentData) return;\r\n\r\n    const svg = d3.select(svgRef.current);\r\n    svg.selectAll('*').remove();\r\n\r\n    const width = 1000;\r\n    const height = 700;\r\n    svg.attr('viewBox', [0, 0, width, height]);\r\n\r\n    const svgGroup = svg.append(\"g\");\r\n\r\n    // 클러스터 데이터를 노드와 링크로 변환\r\n    const nodes = [];\r\n    const links = [];\r\n    \r\n    Object.entries(currentData.cluster_details).forEach(([clusterId, papers]) => {\r\n      // 클러스터 중심 노드\r\n      const centerNode = {\r\n        id: `cluster_${clusterId}`,\r\n        name: `Cluster ${clusterId}`,\r\n        type: 'cluster',\r\n        clusterId: clusterId,\r\n        keywords: currentData.cluster_keywords[clusterId] || [],\r\n        paperCount: papers.length\r\n      };\r\n      nodes.push(centerNode);\r\n\r\n      // 논문 노드들\r\n      papers.forEach(paper => {\r\n        nodes.push({\r\n          id: paper.id,\r\n          name: paper.title,\r\n          type: 'paper',\r\n          clusterId: clusterId,\r\n          detail: paper\r\n        });\r\n        \r\n        // 클러스터 중심과 논문을 연결\r\n        links.push({\r\n          source: `cluster_${clusterId}`,\r\n          target: paper.id\r\n        });\r\n      });\r\n    });\r\n\r\n    const color = d3.scaleOrdinal(d3.schemeCategory10);\r\n\r\n    const simulation = d3.forceSimulation(nodes)\r\n      .force('link', d3.forceLink(links).id(d => d.id).distance(80))\r\n      .force('charge', d3.forceManyBody().strength(d => d.type === 'cluster' ? -500 : -100))\r\n      .force('center', d3.forceCenter(width / 2, height / 2))\r\n      .force('collision', d3.forceCollide(d => d.type === 'cluster' ? 40 : 20));\r\n\r\n    const link = svgGroup.append('g')\r\n      .attr('stroke', '#aaa')\r\n      .attr('stroke-opacity', 0.3)\r\n      .selectAll('line')\r\n      .data(links)\r\n      .join('line')\r\n      .attr('stroke-width', 1);\r\n\r\n    const nodeGroup = svgGroup.append('g')\r\n      .selectAll('g')\r\n      .data(nodes)\r\n      .join('g')\r\n      .call(drag(simulation))\r\n      .on(\"click\", (event, d) => {\r\n        if (d.type === 'cluster') {\r\n          setSelectedCluster(d.clusterId);\r\n          setSelectedPaper(null);\r\n        } else {\r\n          setSelectedPaper(d);\r\n          setSelectedCluster(d.clusterId);\r\n          zoomInToNode(d.id); // 클릭된 논문으로 zoom in\r\n        }\r\n      });\r\n\r\n    nodeGroup.append('circle')\r\n      .attr('r', d => {\r\n        if (d.type === 'cluster') return 25;\r\n        return selectedPaper && selectedPaper.id === d.id ? 12 : 8;\r\n      })\r\n      .attr('fill', d => color(d.clusterId))\r\n      .attr('stroke', d => {\r\n        if (d.type === 'cluster' && selectedCluster === d.clusterId) return 'red';\r\n        if (d.type === 'paper' && selectedPaper && selectedPaper.id === d.id) return 'red';\r\n        return '#fff';\r\n      })\r\n      .attr('stroke-width', d => {\r\n        if (d.type === 'cluster' && selectedCluster === d.clusterId) return 3;\r\n        if (d.type === 'paper' && selectedPaper && selectedPaper.id === d.id) return 3;\r\n        return 1;\r\n      })\r\n      .style('cursor', 'pointer');\r\n\r\n    nodeGroup.append('text')\r\n      .text(d => {\r\n        if (d.type === 'cluster') return `C${d.clusterId}`;\r\n        const title = d.name.length > 20 ? d.name.substring(0, 20) + \"...\" : d.name;\r\n        return title;\r\n      })\r\n      .attr('text-anchor', 'middle')\r\n      .attr('y', d => d.type === 'cluster' ? 5 : -12)\r\n      .style('font-size', d => d.type === 'cluster' ? '14px' : '8px')\r\n      .style('font-weight', d => d.type === 'cluster' ? 'bold' : 'normal')\r\n      .style('cursor', 'pointer')\r\n      .style('fill', d => d.type === 'cluster' ? '#fff' : '#333');\r\n\r\n    simulation.on('tick', () => {\r\n      link\r\n        .attr('x1', d => d.source.x)\r\n        .attr('y1', d => d.source.y)\r\n        .attr('x2', d => d.target.x)\r\n        .attr('y2', d => d.target.y);\r\n\r\n      nodeGroup\r\n        .attr('transform', d => `translate(${d.x},${d.y})`);\r\n    });\r\n\r\n    const zoom = d3.zoom().on(\"zoom\", (event) => {\r\n      svgGroup.attr(\"transform\", event.transform);\r\n    });\r\n    svg.call(zoom);\r\n\r\n    function drag(simulation) {\r\n      function dragstarted(event, d) {\r\n        if (!event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = d.x;\r\n        d.fy = d.y;\r\n      }\r\n      function dragged(event, d) {\r\n        d.fx = event.x;\r\n        d.fy = event.y;\r\n      }\r\n      function dragended(event, d) {\r\n        if (!event.active) simulation.alphaTarget(0.3).restart();\r\n        d.fx = null;\r\n        d.fy = null;\r\n      }\r\n      return d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended);\r\n    }\r\n  }, [currentData, selectedCluster, selectedPaper]);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      <div style={{ flex: 1, position: 'relative' }}>\r\n        {/* 연도 선택 */}\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '10px',\r\n          left: '20px',\r\n          zIndex: 10,\r\n          background: '#fff',\r\n          padding: '10px',\r\n          borderRadius: '8px',\r\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n        }}>\r\n          <label style={{ marginRight: '10px', fontWeight: 'bold' }}>연도 선택:</label>\r\n          <select \r\n            value={selectedYear} \r\n            onChange={(e) => handleYearChange(e.target.value)}\r\n            style={{ padding: '5px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n          >\r\n            {availableYears.map(year => (\r\n              <option key={year.label} value={year.label}>{year.label}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* 검색 */}\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '50px',\r\n          left: '50%',\r\n          transform: 'translateX(-50%)',\r\n          zIndex: 10,\r\n          background: '#fff',\r\n          padding: '10px',\r\n          borderRadius: '8px',\r\n          boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\r\n          display: 'flex',\r\n          gap: '10px',\r\n          alignItems: 'center'\r\n        }}>\r\n          <input\r\n            type=\"text\"\r\n            value={searchKeyword}\r\n            onChange={handleInputChange}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"논문 제목 검색\"\r\n            style={{ width: '300px', padding: '8px 12px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n          />\r\n          <button onClick={handleSearch} style={{\r\n            padding: '8px 16px',\r\n            borderRadius: '5px',\r\n            border: 'none',\r\n            backgroundColor: '#007bff',\r\n            color: '#fff',\r\n            cursor: 'pointer'\r\n          }}>Search</button>\r\n\r\n          {errorMessage && (\r\n            <p style={{ color: 'red', fontSize: '14px', marginTop: '10px' }}>{errorMessage}</p>\r\n          )}\r\n\r\n          {suggestions.length > 0 && (\r\n            <ul style={{\r\n              position: 'absolute',\r\n              top: '50px',\r\n              background: '#fff',\r\n              border: '1px solid #ddd',\r\n              listStyle: 'none',\r\n              padding: '5px',\r\n              margin: 0,\r\n              width: '300px',\r\n              zIndex: 20,\r\n              maxHeight: '200px',\r\n              overflowY: 'auto',\r\n              borderRadius: '5px',\r\n              boxShadow: '0 2px 5px rgba(0,0,0,0.15)'\r\n            }}>\r\n              {suggestions.map(paper => (\r\n                <li key={paper.id} style={{ padding: '5px', cursor: 'pointer' }}\r\n                  onClick={() => handleSuggestionClick(paper)}>\r\n                  {paper.title}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        <svg ref={svgRef} width=\"1000\" height=\"700\" />\r\n      </div>\r\n\r\n      {/* 사이드바 */}\r\n      <div style={{\r\n        background: '#f9f9f9',\r\n        border: '1px solid #ddd',\r\n        borderRadius: '10px',\r\n        padding: '15px',\r\n        boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\r\n        width: '350px',\r\n        margin: '10px'\r\n      }}>\r\n        {selectedPaper ? (\r\n          <>\r\n            <h4 style={{ fontSize: '20px' }}>{selectedPaper.title}</h4>\r\n            <p><strong>클러스터:</strong> {selectedCluster}</p>\r\n            <div>\r\n              <strong>키워드:</strong>\r\n              <ul>\r\n                {currentData.cluster_keywords[selectedCluster]?.map((keyword, idx) => (\r\n                  <li key={idx}>{keyword}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <strong>상세 정보:</strong>\r\n              <pre>{JSON.stringify(selectedPaper.detail, null, 2)}</pre>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <p>논문을 클릭하여 상세 정보를 확인하세요.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CitationYearPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}